---
import Layout from '@layouts/Layout.astro';
---

<Layout title="Assets - IC the Moon" enableFooterReveal={true}>
  <main class="page-content">
    <!-- Page Header -->
    <section class="page-header">
      <div class="page-header-content">
        <h1>Download Assets</h1>
      </div>

      <!-- Simple top-right pill navigation -->
      <div class="page-nav-pills">
        <button class="pill-button" data-filter="category" aria-label="Category">
          <span class="pill-text">Category</span>
        </button>
        <button class="pill-button" data-filter="featured" aria-label="Featured">
          <span class="pill-text">Featured</span>
        </button>
        <button class="pill-button" data-filter="keywords" aria-label="Keywords">
          <span class="pill-text">Keywords</span>
        </button>
      </div>

      <!-- Slide-out card that follows the button -->
      <div class="slide-out-card" id="slideOutCard">
        <div class="card-content" id="cardContent">
          <!-- Content will be loaded here based on selected filter -->
        </div>
      </div>
    </section>

    <!-- Dropdown Content Area for assets tabs -->
    <section class="assets-dropdown-content" id="assetsDropdownContent">
      <div class="dropdown-content-wrapper"></div>
    </section>

    <!-- Assets Grid Section -->
    <section class="assets-section content-aligned">
      <div class="content-sections">
          <!-- Category Filter Widget -->
          <div class="content-section widget" id="categoryWidget" style="display: none;">
            <div class="category-buttons">
              <button class="category-btn active" data-category="all">All Assets</button>
              <button class="category-btn" data-category="templates">Templates</button>
              <button class="category-btn" data-category="checklists">Checklists</button>
              <button class="category-btn" data-category="guides">Guides</button>
              <button class="category-btn" data-category="tools">Tools</button>
            </div>
          </div>

          <!-- Featured Assets Widget -->
          <div class="content-section widget" id="featuredWidget" style="display: none;">
            <div class="featured-cards">
              <a href="#" class="featured-card">
                <div class="featured-content">
                  <h4>Design System Template</h4>
                  <span class="featured-meta">Most Popular</span>
                </div>
              </a>
              <a href="#" class="featured-card">
                <div class="featured-content">
                  <h4>WCAG Checklist</h4>
                  <span class="featured-meta">Essential</span>
                </div>
              </a>
              <a href="#" class="featured-card">
                <div class="featured-content">
                  <h4>Screen Reader Guide</h4>
                  <span class="featured-meta">New Release</span>
                </div>
              </a>
            </div>
          </div>

          <!-- Keywords Widget -->
          <div class="content-section widget" id="keywordsWidget" style="display: none;">
            <div class="keyword-tags">
              <button class="keyword-tag" data-keyword="accessibility">ACCESSIBILITY</button>
              <button class="keyword-tag" data-keyword="wcag">WCAG</button>
              <button class="keyword-tag" data-keyword="design">DESIGN</button>
              <button class="keyword-tag" data-keyword="templates">TEMPLATES</button>
              <button class="keyword-tag" data-keyword="testing">TESTING</button>
              <button class="keyword-tag" data-keyword="mobile">MOBILE</button>
              <button class="keyword-tag" data-keyword="forms">FORMS</button>
              <button class="keyword-tag" data-keyword="colors">COLORS</button>
              <button class="keyword-tag" data-keyword="tools">TOOLS</button>
              <button class="keyword-tag" data-keyword="guides">GUIDES</button>
            </div>
          </div>
        </div>

      <div class="assets-grid">
          <!-- Template Assets -->
          <div class="asset-card" data-category="templates" data-keywords="accessibility,design,templates,wcag">
            <div class="asset-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6z"/>
                <polyline points="14,2 14,8 20,8"/>
              </svg>
            </div>
            <div class="asset-content">
              <span class="asset-badge templates">Template</span>
              <h3>Accessible Design System Template</h3>
              <p>Complete design system with accessibility-first components, color palettes, and typography guidelines.</p>
              <div class="asset-meta">
                <span class="file-type">Figma + Sketch</span>
                <span class="file-size">2.4 MB</span>
                <span class="downloads">1,234 downloads</span>
              </div>
              <div class="asset-actions">
                <button class="download-btn">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                    <polyline points="7,10 12,15 17,10"/>
                    <line x1="12" y1="15" x2="12" y2="3"/>
                  </svg>
                  Download
                </button>
                <button class="preview-btn">Preview</button>
              </div>
            </div>
          </div>

          <!-- Checklist Assets -->
          <div class="asset-card" data-category="checklists" data-keywords="accessibility,wcag,testing,guides">
            <div class="asset-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M9 11H3v2h6v-2z"/>
                <path d="M9 7H3v2h6V7z"/>
                <path d="M9 15H3v2h6v-2z"/>
                <path d="M13 7h8v2h-8V7z"/>
                <path d="M13 11h8v2h-8v-2z"/>
                <path d="M13 15h8v2h-8v-2z"/>
              </svg>
            </div>
            <div class="asset-content">
              <span class="asset-badge checklists">Checklist</span>
              <h3>WCAG 2.1 AA Compliance Checklist</h3>
              <p>Comprehensive checklist covering all WCAG 2.1 AA success criteria with practical implementation notes.</p>
              <div class="asset-meta">
                <span class="file-type">PDF</span>
                <span class="file-size">1.2 MB</span>
                <span class="downloads">3,456 downloads</span>
              </div>
              <div class="asset-actions">
                <button class="download-btn">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                    <polyline points="7,10 12,15 17,10"/>
                    <line x1="12" y1="15" x2="12" y2="3"/>
                  </svg>
                  Download
                </button>
                <button class="preview-btn">Preview</button>
              </div>
            </div>
          </div>

          <!-- Guide Assets -->
          <div class="asset-card" data-category="guides" data-keywords="accessibility,guides,mobile,forms">
            <div class="asset-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"/>
                <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"/>
              </svg>
            </div>
            <div class="asset-content">
              <span class="asset-badge guides">Guide</span>
              <h3>Screen Reader Testing Guide</h3>
              <p>Step-by-step guide for testing your websites with popular screen readers including NVDA, JAWS, and VoiceOver.</p>
              <div class="asset-meta">
                <span class="file-type">PDF</span>
                <span class="file-size">3.1 MB</span>
                <span class="downloads">2,187 downloads</span>
              </div>
              <div class="asset-actions">
                <button class="download-btn">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                    <polyline points="7,10 12,15 17,10"/>
                    <line x1="12" y1="15" x2="12" y2="3"/>
                  </svg>
                  Download
                </button>
                <button class="preview-btn">Preview</button>
              </div>
            </div>
          </div>

          <!-- Tool Assets -->
          <div class="asset-card" data-category="tools" data-keywords="tools,testing,colors,accessibility">
            <div class="asset-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"/>
              </svg>
            </div>
            <div class="asset-content">
              <span class="asset-badge tools">Tool</span>
              <h3>Color Contrast Analyzer</h3>
              <p>Browser extension for real-time color contrast checking with WCAG AA and AAA compliance indicators.</p>
              <div class="asset-meta">
                <span class="file-type">Browser Extension</span>
                <span class="file-size">456 KB</span>
                <span class="downloads">5,671 downloads</span>
              </div>
              <div class="asset-actions">
                <button class="download-btn">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                    <polyline points="7,10 12,15 17,10"/>
                    <line x1="12" y1="15" x2="12" y2="3"/>
                  </svg>
                  Download
                </button>
                <button class="preview-btn">Preview</button>
              </div>
            </div>
          </div>

          <!-- More Template Assets -->
          <div class="asset-card" data-category="templates" data-keywords="design,templates,mobile,forms">
            <div class="asset-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6z"/>
                <polyline points="14,2 14,8 20,8"/>
              </svg>
            </div>
            <div class="asset-content">
              <span class="asset-badge templates">Template</span>
              <h3>Accessible Form Components</h3>
              <p>Ready-to-use HTML/CSS form components with proper ARIA labels, error handling, and validation.</p>
              <div class="asset-meta">
                <span class="file-type">HTML + CSS</span>
                <span class="file-size">892 KB</span>
                <span class="downloads">4,321 downloads</span>
              </div>
              <div class="asset-actions">
                <button class="download-btn">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                    <polyline points="7,10 12,15 17,10"/>
                    <line x1="12" y1="15" x2="12" y2="3"/>
                  </svg>
                  Download
                </button>
                <button class="preview-btn">Preview</button>
              </div>
            </div>
          </div>

          <!-- More Checklist Assets -->
          <div class="asset-card" data-category="checklists" data-keywords="wcag,testing,colors,accessibility">
            <div class="asset-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M9 11H3v2h6v-2z"/>
                <path d="M9 7H3v2h6V7z"/>
                <path d="M9 15H3v2h6v-2z"/>
                <path d="M13 7h8v2h-8V7z"/>
                <path d="M13 11h8v2h-8v-2z"/>
                <path d="M13 15h8v2h-8v-2z"/>
              </svg>
            </div>
            <div class="asset-content">
              <span class="asset-badge checklists">Checklist</span>
              <h3>Mobile Accessibility Checklist</h3>
              <p>Specialized checklist for mobile app accessibility covering touch targets, screen orientations, and gestures.</p>
              <div class="asset-meta">
                <span class="file-type">PDF</span>
                <span class="file-size">987 KB</span>
                <span class="downloads">1,876 downloads</span>
              </div>
              <div class="asset-actions">
                <button class="download-btn">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                    <polyline points="7,10 12,15 17,10"/>
                    <line x1="12" y1="15" x2="12" y2="3"/>
                  </svg>
                  Download
                </button>
                <button class="preview-btn">Preview</button>
              </div>
            </div>
          </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .page-content {
    min-height: calc(100vh - 120px);
  }

  .page-header { overflow: visible !important; /* Padding now handled by global unified styles */ }

  /* Protect pill navigation from footer reveal effects */
  body.tight .page-nav-pills,
  body.tight .slide-out-card {
    position: fixed !important;
    z-index: 999 !important;
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    transform: none !important;
  }

  /* Ensure pinned pills stay visible during footer reveal */
  body.tight .slide-out-card.open {
    right: 0 !important;
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
  }


  /* Simple top-right pill buttons */
  .page-nav-pills {
    position: fixed;
    top: calc(4rem + 60px); /* Moved up 50px to prevent bottom menu overlap */
    right: 0;
    z-index: 999;
    display: flex;
    gap: 4px;
    flex-direction: column;
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
  }

  .page-nav-pills:hover {
    transform: none !important; /* Prevent parent container movement */
  }

  .pill-button {
    width: 48px; /* Original visible size */
    height: 96px;
    border-radius: 12px 0 0 12px;
    background: var(--brand-background);
    border: 1px solid var(--color-primary);
    border-right: none;
    color: var(--color-secondary);
    cursor: pointer;
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94), background-color 0s, border-color 0s; /* Transform animation + instant colors */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 12px 8px;
    box-shadow: -4px 2px 16px rgba(0, 0, 0, 0.15), -2px 0 8px rgba(230, 57, 97, 0.1), 0 2px 8px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    text-decoration: none;
    position: relative;
    z-index: 1002;
  }

  /* Hidden extension for better animation connection - always red */
  .pill-button::after {
    content: '';
    position: absolute;
    top: 0;
    right: -52px; /* Extend 52px to the right, off-screen */
    width: 52px;
    height: 100%;
    background: var(--color-primary); /* Always red for solid connection */
    border: 1px solid var(--color-primary);
    border-left: none;
    border-right: none;
    z-index: -1; /* Behind the main tab */
  }

  .pill-text {
    transform: rotate(-90deg);
    white-space: nowrap;
    font-size: var(--text-xs);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .pill-button:hover {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary-dark, var(--color-primary));
<<<<<<< HEAD
    transform: none !important; /* Prevent any transform on hover */
    transition: background-color 0s, border-color 0s, color 0s !important; /* Force instant color changes only */
    box-shadow: none !important; /* Remove any box-shadow changes */
    position: relative !important; /* Lock position */
    top: 0 !important; /* Lock vertical position */
    left: 0 !important; /* Lock horizontal position */
    margin: 0 !important; /* Remove margin changes */
    padding: 12px 8px !important; /* Lock padding */
=======
>>>>>>> 8c177d8293b6d00a6d5e927911a84d1e7cacff9b
  }

  .pill-button.active {
    background: var(--color-primary);
    color: var(--brand-background);
    transform: translateX(-380px); /* Move exactly sidebar width to align left edges */
    box-shadow: -6px 4px 20px rgba(0, 0, 0, 0.2), -4px 0 16px rgba(230, 57, 97, 0.4), 0 2px 8px rgba(0, 0, 0, 0.1);
    z-index: 1003; /* Always highest, above sidebar */
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94), background-color 0s, border-color 0s; /* Transform animation + instant colors */
    border-radius: 12px 0 0 12px; /* Remove right-side rounded corners to attach to sidebar */
    border-right: none; /* Remove right border for seamless connection */
  }

  /* Sidebar slides in from off-screen with the tab */
  .slide-out-card {
    position: fixed;
    top: calc(4rem + 30px); /* Moved up 50px to align with tab positioning */
    right: -380px; /* Hidden off-screen initially */
    width: 380px;
    height: 520px; /* Increase height to accommodate higher position */
    background: var(--brand-background);
    border: 2px solid var(--color-primary); /* Consistent red border */
    border-radius: 16px 0 0 16px;
    z-index: 1001; /* Above expanded tab but below non-expanded tabs */
    border-right: none;
    box-shadow: -12px 4px 32px rgba(0, 0, 0, 0.2), -8px 0 24px rgba(230, 57, 97, 0.15), -4px 0 16px rgba(0, 0, 0, 0.1); /* Enhanced drop shadow with red accent */
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    opacity: 1; /* Always visible when in view */
    pointer-events: none;
    transition: right 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Smooth glide animation */
  }

  .slide-out-card.open {
    right: 0; /* Slides to screen edge */
    pointer-events: auto;
  }

  .card-content {
    padding: var(--space-lg);
    max-height: 450px;
    overflow-y: auto;
    background: var(--brand-background);
    border-radius: 12px 0 0 12px;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    color: var(--color-secondary) !important;
  }

  .card-content::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }

  .card-content * {
    color: inherit !important;
  }

  /* Global sidebar content styling for brand consistency */
  .card-content h3 {
    color: var(--color-primary);
    font-size: var(--text-lg);
    font-weight: 600;
    margin: 0 0 var(--space-md) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: var(--space-sm);
  }

  .card-content .section-title {
    color: var(--color-secondary);
    font-size: var(--text-md);
    font-weight: 500;
    margin: var(--space-lg) 0 var(--space-sm) 0;
    text-transform: uppercase;
    letter-spacing: 0.03em;
  }

  .card-content h3 {
    margin: 0 0 var(--space-md) 0;
    font-size: var(--text-sm);
    font-weight: 600;
    color: var(--color-secondary);
  }

  .filter-options {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .filter-option {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs);
    border-radius: var(--radius-sm);
    cursor: pointer;
    transition: background var(--transition-base);
  }

  .filter-option:hover {
    background: var(--color-background);
  }

  .filter-option input[type="checkbox"] {
    margin: 0;
  }

  .filter-option label {
    margin: 0;
    cursor: pointer;
    font-size: var(--text-xs);
    color: var(--color-text-primary);
  }

  @media (max-width: 768px) {
    .slide-out-card {
      top: calc(2.5rem + 30px); /* Moved up 50px to align with tab positioning */
      right: -340px; /* Hidden off-screen on mobile too */
      width: 340px; /* Larger width for mobile */
      height: 480px; /* Taller height for mobile */
    }

    .pill-button.active {
      transform: translateX(-340px); /* Move exactly mobile sidebar width to align left edges */
    }
  }

  @media (max-width: 768px) {
    .page-nav-pills {
      top: calc(2.5rem + 110px);
      right: 0;
      gap: 2px;
    }

    .pill-button {
      width: 38px;
      height: 72px;
      padding: 8px 6px;
    }

    .pill-button::after {
      right: -26px; /* Mobile: smaller extension */
      width: 26px;
    }

    .pill-text {
      font-size: 9px;
    }
  }

  .assets-nav-tabs {
    display: flex;
    gap: 4px;
    align-items: flex-end;
    flex-wrap: wrap;
    justify-content: center;
  }

  @media (max-width: 640px) {
    .assets-nav-tabs {
      overflow-x: auto;
      flex-wrap: nowrap;
      justify-content: flex-start;
      scrollbar-width: none;
      -ms-overflow-style: none;
    }
    .assets-nav-tabs::-webkit-scrollbar {
      display: none;
    }
  }

  .assets-nav-tab {
    display: flex;
    align-items: center;
    gap: clamp(0.1rem, 0.5vw + 0.1rem, var(--space-xs));
    padding: clamp(0.25rem, 1vw + 0.3rem, 0.75rem) clamp(0.75rem, 2vw + 0.1rem, 1.5rem);
    background: var(--brand-background);
    border: 2px solid var(--nav-border);
    border-top: none;
    border-radius: 0 0 var(--radius-md) var(--radius-md);
    color: var(--color-secondary);
    font-weight: 500;
    font-size: clamp(0.7rem, 1vw + 0.4rem, 0.875rem);
    cursor: pointer;
    transition: background-color 0.25s ease, color 0.25s ease, box-shadow 0.25s ease;
    position: relative;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    white-space: nowrap;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    flex-shrink: 0;
  }

  .assets-nav-tab:hover {
    background: var(--color-primary);
    color: var(--color-white);
    box-shadow: none;
  }

  .assets-nav-tab.active:hover {
    background: var(--color-primary);
    color: var(--color-white);
  }

  .tab-icon { flex-shrink: 0; }

  /* Dropdown overlay card */
  .assets-dropdown-content {
    position: fixed;
    left: 50%;
    top: var(--dropdown-top, 0px);
    transform: translateX(-50%) translateY(-100%);
    pointer-events: none;
    z-index: 1002;
    width: min(100vw - var(--space-2xl), 1400px);
    background: var(--brand-background);
    border: 2px solid var(--nav-border);
    border-radius: 0 0 var(--radius-xl) var(--radius-xl);
    box-sizing: border-box;
    transition: border-color 0s; /* Instant color changes */
    box-shadow: none;
  }

  .assets-dropdown-content.open {
    transform: translateX(-50%) translateY(var(--open-overlap, -14px));
    pointer-events: auto;
    box-shadow: 0 24px 36px -24px rgba(0, 0, 0, 0.18), 0 48px 80px -40px rgba(0, 0, 0, 0.22);
    border-bottom: none;
  }

  .assets-dropdown-content.open.closing {
    transform: translateX(-50%) translateY(-100%);
  }

  .assets-dropdown-content .attached-tab {
    position: absolute;
    bottom: 0;
    left: var(--attached-tab-left, 50%);
    transform: translate(-50%, calc(100% - 1px));
    z-index: 1;
    pointer-events: auto;
    box-shadow: none;
    filter: drop-shadow(0 8px 12px rgba(0,0,0,0.12));
  }

  /* Responsive styles for attached tabs */
  @media (max-width: 768px) {
    .assets-dropdown-content .attached-tab {
      padding: var(--space-xs) var(--space-sm);
      font-size: var(--text-xs);
      gap: var(--space-xs);
    }
    .assets-dropdown-content .attached-tab .tab-icon {
      width: 14px;
      height: 14px;
    }
  }

  @media (max-width: 480px) {
    .assets-dropdown-content .attached-tab {
      flex-shrink: 0;
      min-width: auto;
      padding: var(--space-xs) var(--space-xs);
      font-size: 0;
      gap: 0;
      justify-content: center;
      text-align: center;
      min-width: 42px;
      height: 36px;
      color: transparent;
    }
    .assets-dropdown-content .attached-tab .tab-icon {
      width: 16px;
      height: 16px;
      color: var(--color-secondary);
    }
    .assets-dropdown-content .attached-tab:hover .tab-icon,
    .assets-dropdown-content .attached-tab.active .tab-icon {
      color: var(--color-white);
    }
  }

  .dropdown-content-wrapper {
    padding: var(--space-3xl) var(--space-xl) var(--space-xl);
    max-height: none;
    overflow: visible;
  }

  .hero-section {
    background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
    color: white;
    padding: 4rem 0 5rem;
    text-align: center;
  }

  .container {
    margin: 0 auto;
    padding: 0 1rem;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 700;
    margin-bottom: 1rem;
    color: white;
  }

  .hero-subtitle {
    font-size: clamp(1.125rem, 2vw, 1.5rem);
    opacity: 0.9;
    max-width: 600px;
    margin: 0 auto;
  }

  /* Widget Styles */
  .content-sections { padding: var(--space-xs) 0; }
  .content-section { margin-bottom: var(--space-xs); }
  .content-section:last-child { margin-bottom: 0; }
  .content-section h3 {
    color: var(--color-secondary);
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    margin: 0 0 var(--space-xs) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  /* Category Buttons and Keyword Tags */
  .category-buttons, .keyword-tags {
    display: flex; flex-wrap: wrap; gap: var(--space-sm); margin-top: var(--space-sm);
  }

  .category-btn {
    padding: var(--space-md) var(--space-lg);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-lg);
    background: var(--brand-background);
    color: var(--color-secondary);
    font-size: var(--text-sm);
    font-weight: 600;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.15), 0 1px 4px rgba(0, 0, 0, 0.1);
    transition: background-color 0s, border-color 0s;
    text-transform: capitalize;
    line-height: 1.3;
    text-align: center;
    white-space: normal;
    min-height: 52px;
    min-width: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1 1 auto;
  }

  .keyword-tag {
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--color-primary);
    border-radius: var(--radius-full);
    background: color-mix(in srgb, var(--color-primary) 5%, var(--brand-background));
    color: var(--color-primary);
    font-size: var(--text-xs);
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    box-shadow: 0 1px 4px rgba(230, 57, 97, 0.1);
  }

  .category-btn:hover {
    background: var(--color-primary);
    color: var(--brand-background);
    box-shadow: 0 4px 16px rgba(230, 57, 97, 0.3), 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .keyword-tag:hover {
    background: var(--color-primary);
    color: var(--brand-background);
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.25), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  .category-btn.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 3px 12px rgba(230, 57, 97, 0.4), 0 1px 6px rgba(0, 0, 0, 0.1);
  }

  .category-btn.active:hover {
    background: var(--color-secondary); border-color: var(--color-secondary);
  }

  .keyword-tag { font-size: var(--text-xs); padding: var(--space-xs) var(--space-sm); }

  .keyword-tag.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.3), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  .keyword-tag.active:hover {
    background: var(--color-secondary); border-color: var(--color-secondary);
  }

  /* Featured Cards */
  .featured-cards { display: grid; grid-template-columns: repeat(3, 1fr); gap: var(--space-sm); }
  .featured-card {
    display: block;
    background: var(--brand-background);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-lg);
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: background-color 0s, border-color 0s;
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.15), 0 1px 4px rgba(0, 0, 0, 0.1);
  }
  .featured-card:hover {
    border-color: color-mix(in srgb, var(--color-primary) 25%, transparent);
  }
  .featured-content { padding: var(--space-md); text-align: center; }
  .featured-content h4 {
    color: var(--color-secondary) !important;
    font-size: var(--text-xs) !important;
    font-weight: 600 !important;
    margin: 0 0 var(--space-xs) 0;
    line-height: var(--leading-tight);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  .featured-meta {
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    color: var(--color-primary); padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm); font-size: var(--text-xs); font-weight: 500;
    text-transform: uppercase; letter-spacing: 0.05em; display: inline-block;
  }

  /* Assets Section */
  .assets-section {
    padding: 4rem 0 2rem;
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .category-buttons {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(3, 1fr);
      gap: var(--space-sm);
      max-width: 400px;
      margin: var(--space-sm) auto 0;
    }

    .category-btn {
      font-size: var(--text-xs);
      padding: var(--space-sm) var(--space-md);
      min-width: auto;
      min-height: 44px;
      text-align: center;
      line-height: 1.2;
      flex: none;
    }

    .category-btn:first-child {
      grid-column: 1 / -1;
    }

    .keyword-tag { font-size: var(--text-xs); padding: var(--space-xs) var(--space-xs); }
    .featured-cards { grid-template-columns: 1fr; gap: var(--space-xs); }
    .featured-card { border: 1px solid color-mix(in srgb, var(--color-primary) 15%, transparent); border-radius: var(--radius-sm); }
    .featured-content { padding: var(--space-sm); text-align: left; }
    .featured-content h4 { font-size: var(--text-sm); margin-bottom: var(--space-xs); }
    .featured-meta { font-size: 10px; padding: 2px var(--space-xs); }
  }

  /* Tablet adjustments for tabs */
  @media (max-width: 640px) {
    .assets-nav-tab { padding: var(--space-xs) var(--space-sm); font-size: var(--text-xs); gap: var(--space-xs); }
    .assets-nav-tab .tab-icon { width: 14px; height: 14px; }
  }

  @media (max-width: 480px) {

    .assets-nav-tabs {
      display: flex; flex-wrap: nowrap; justify-content: center; gap: var(--space-xs);
      overflow-x: auto; padding: 0 var(--space-sm); scrollbar-width: none; -ms-overflow-style: none;
      width: auto !important;
      min-width: auto !important;
      max-width: none !important;
    }
    .assets-nav-tabs::-webkit-scrollbar { display: none; }
    .assets-nav-tab {
      flex-shrink: 0; min-width: auto; padding: var(--space-xs) var(--space-xs);
      font-size: 0; gap: 0; justify-content: center; text-align: center;
      border-radius: 0 0 var(--radius-md) var(--radius-md); min-width: 42px; height: 36px; color: transparent;
    }
    .assets-nav-tab .tab-icon { width: 16px; height: 16px; color: var(--color-secondary); }
    .assets-nav-tab:hover .tab-icon, .assets-nav-tab.active .tab-icon { color: var(--color-white); }
  }

  .assets-grid {
    display: grid;
    gap: var(--space-xl);
  }

  @media (min-width: 768px) {
    .assets-grid {
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }
  }

  .asset-card {
    background: var(--color-background);
    border: 2px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-radius: var(--radius-lg);
    padding: var(--space-xl);
    box-shadow: var(--shadow-sm);
    transition: background-color 0s, border-color 0s;
  }

  .asset-card:hover {
    border-color: color-mix(in srgb, var(--color-primary) 30%, transparent);
  }

  .asset-icon {
    width: 60px;
    height: 60px;
    background: color-mix(in srgb, var(--color-primary) 15%, transparent);
    color: var(--color-primary);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
  }

  .asset-icon svg {
    width: 28px;
    height: 28px;
  }

  .asset-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 16px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 1rem;
    display: inline-block;
  }

  .asset-badge.templates {
    background: color-mix(in srgb, var(--color-primary) 15%, transparent);
    color: var(--color-primary);
  }

  .asset-badge.checklists {
    background: color-mix(in srgb, var(--color-secondary) 15%, transparent);
    color: var(--color-secondary);
  }

  .asset-badge.guides {
    background: color-mix(in srgb, var(--brand-accent-1) 15%, transparent);
    color: var(--brand-accent-1);
  }

  .asset-badge.tools {
    background: color-mix(in srgb, var(--brand-accent-2) 15%, transparent);
    color: var(--brand-accent-2);
  }

  .asset-content h3 {
    font-size: 1.25rem;
    color: var(--color-secondary);
    margin-bottom: 0.75rem;
    font-weight: 700;
  }

  .asset-content p {
    color: var(--color-text-primary);
    margin-bottom: 1.5rem;
    line-height: 1.5;
  }

  .asset-meta {
    display: flex;
    gap: 1rem;
    font-size: 0.875rem;
    color: var(--color-text-primary);
    margin-bottom: 1.5rem;
    opacity: 0.8;
  }

  .asset-actions {
    display: flex;
    gap: 0.75rem;
  }

  .download-btn {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: 0.75rem 1.25rem;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: background-color 0s, border-color 0s;
    flex: 1;
    justify-content: center;
  }

  .download-btn:hover {
    background: var(--color-primary-dark);
  }

  .download-btn svg {
    width: 16px;
    height: 16px;
  }

  .preview-btn {
    background: transparent;
    color: var(--color-secondary);
    border: 2px solid color-mix(in srgb, var(--color-secondary) 20%, transparent);
    padding: 0.75rem 1.25rem;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
  }

  .preview-btn:hover {
    background: var(--color-secondary);
    color: white;
  }

  /* Responsive Design */
  @media (max-width: 767px) {
    .filter-controls {
      gap: 0.5rem;
    }

    .filter-btn {
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
    }

    .assets-grid {
      grid-template-columns: 1fr;
    }

    .asset-meta {
      flex-direction: column;
      gap: 0.5rem;
    }

    .asset-actions {
      flex-direction: column;
    }

    .hero-section {
      padding: 2rem 0 3rem;
    }

    .assets-section {
      padding: 2rem 0;
    }
  }

  /* Enhanced Sidebar Sections */
  .sidebar-section {
    margin-bottom: var(--space-xl);
  }

  .section-header {
    margin-bottom: var(--space-lg);
    text-align: center;
    border-bottom: 1px solid color-mix(in srgb, var(--color-primary) 20%, transparent);
    padding-bottom: var(--space-md);
  }

  .section-header h3 {
    color: var(--color-primary) !important;
    font-size: var(--text-md) !important;
    font-weight: 600 !important;
    margin: 0 0 var(--space-xs) 0 !important;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border: none !important;
    padding: 0 !important;
  }

  .section-description {
    color: var(--color-secondary) !important;
    font-size: var(--text-xs) !important;
    font-style: italic;
    margin: 0 !important;
    opacity: 0.8;
  }

  /* Enhanced Category Buttons */
  .category-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
    margin-top: var(--space-md);
    justify-content: center;
  }

  .category-btn {
    padding: var(--space-md) var(--space-lg);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-lg);
    background: var(--brand-background);
    color: var(--color-secondary);
    font-size: var(--text-sm);
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.3;
    text-align: center;
    text-decoration: none;
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.15), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  .category-btn:hover {
    background: var(--color-primary);
    color: var(--brand-background);
  }

  .category-btn.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 4px 16px rgba(230, 57, 97, 0.3), 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .category-btn.active:hover {
    background: var(--color-secondary);
    color: var(--brand-background);
    border-color: var(--color-secondary);
  }

  /* Enhanced Keyword Cloud */
  .keyword-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
    justify-content: center;
    margin-top: var(--space-md);
  }

  .keyword-pill {
    padding: var(--space-xs) var(--space-md);
    border: 1px solid var(--color-primary);
    border-radius: var(--radius-full);
    background: var(--brand-background);
    color: var(--color-secondary);
    font-size: var(--text-xs);
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    text-transform: lowercase;
    letter-spacing: 0.02em;
    position: relative;
    text-decoration: none;
  }

  .keyword-pill:hover {
    background: var(--color-primary);
    color: var(--brand-background);
  }

  .keyword-pill.popular {
    font-weight: 600;
    background: color-mix(in srgb, var(--color-primary) 10%, var(--brand-background));
  }

  .keyword-pill.featured {
    border-color: var(--color-secondary);
    color: var(--color-secondary);
    font-weight: 600;
  }

  .keyword-pill.trending {
    animation: subtle-pulse 2s infinite;
  }

  .keyword-pill.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.3), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  @keyframes subtle-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
  }

  /* Enhanced Featured Grid */
  .featured-grid {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    margin-top: var(--space-md);
  }

  .featured-item {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    padding: var(--space-md);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-lg);
    background: var(--brand-background);
    text-decoration: none;
    color: inherit;
    transition: background-color 0s, border-color 0s;
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.1);
    position: relative;
    overflow: hidden;
  }

  .featured-item:hover {
    border-color: var(--color-secondary);
  }

  .featured-icon {
    font-size: 1.5rem;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: color-mix(in srgb, var(--color-primary) 10%, var(--brand-background));
    border-radius: var(--radius-md);
    flex-shrink: 0;
  }

  .featured-info {
    flex: 1;
    min-width: 0;
  }

  .featured-info h4 {
    color: var(--color-secondary);
    font-size: var(--text-sm);
    font-weight: 600;
    margin: 0 0 var(--space-xs) 0;
    line-height: 1.3;
  }

  .featured-badge {
    font-size: var(--text-xs);
    color: var(--brand-background);
    background: var(--color-primary);
    padding: 2px 8px;
    border-radius: var(--radius-sm);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.02em;
  }

  .featured-item.popular .featured-badge {
    background: var(--color-secondary);
  }

  .featured-item.trending .featured-icon {
    animation: subtle-pulse 2s infinite;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const navTabs = document.querySelectorAll('.assets-nav-tab');
    const dropdown = document.getElementById('assetsDropdownContent');
    const dropdownWrapper = dropdown ? dropdown.querySelector('.dropdown-content-wrapper') : null;
    const pageHeader = document.querySelector('.page-header');
    const tabsRow = document.querySelector('.assets-nav-tabs');

    // Widgets
    const categoryWidget = document.getElementById('categoryWidget');
    const featuredWidget = document.getElementById('featuredWidget');
    const keywordsWidget = document.getElementById('keywordsWidget');

    // Position overlay under header
    function positionOverlay() {
      if (!dropdown || !pageHeader) return;
      const rect = pageHeader.getBoundingClientRect();
      dropdown.style.setProperty('--dropdown-top', `${rect.bottom}px`);
    }

    // Move real tab into overlay and restore
    const tabHomes = new WeakMap<HTMLElement, { parent: Node; nextSibling: ChildNode | null; placeholder: HTMLElement; widthPx: number; correctLeft?: number }>();
    let currentAttachedTab: HTMLElement | null = null;

    function attachRealTab(tabEl: Element | null) {
      if (!dropdown || !tabEl) return;
      const tab = tabEl as HTMLElement;
      if (currentAttachedTab === tab) return;

      // Calculate and store the correct position BEFORE any layout changes
      const rect = tab.getBoundingClientRect();
      const ddRect = dropdown.getBoundingClientRect();
      const correctLeft = rect.left - ddRect.left + rect.width / 2;

      const phW = Math.round(rect.width);
      const phH = Math.round(rect.height);
      const placeholder = document.createElement('span');
      placeholder.className = 'tab-placeholder';
      placeholder.style.display = 'inline-flex';
      placeholder.style.width = `${phW}px`;
      placeholder.style.height = `${phH}px`;
      placeholder.style.flex = `0 0 ${phW}px`;

      const parent = tab.parentNode as Node;
      const nextSibling = tab.nextSibling as ChildNode | null;
      tabHomes.set(tab, { parent, nextSibling, placeholder, widthPx: phW, correctLeft });

      // NOW restore the previous tab (this changes layout)
      if (currentAttachedTab && currentAttachedTab !== tab) {
        restoreRealTab(currentAttachedTab);
      }

      // Insert placeholder and attach new tab
      parent.insertBefore(placeholder, tab);
      dropdown.appendChild(tab);
      tab.classList.add('attached-tab');
      tab.style.pointerEvents = 'auto';
      tab.style.width = `${phW}px`;
      tab.style.flex = `0 0 ${phW}px`;

      updateAttachedTabPosition(tab);
      currentAttachedTab = tab;
    }

    function updateAttachedTabPosition(tabEl?: HTMLElement | null) {
      const tab = tabEl || currentAttachedTab;
      if (!dropdown || !tab) return;
      const home = tabHomes.get(tab);
      if (!home) return;
      try {
        const ddRect = dropdown.getBoundingClientRect();

        // Use the stored correct position if available
        let rawLeft;
        if (home.correctLeft !== undefined) {
          rawLeft = home.correctLeft;
        } else {
          // Fallback to placeholder position
          const phRect = home.placeholder.getBoundingClientRect();
          rawLeft = phRect.left - ddRect.left + phRect.width / 2;
        }

        const tabWidth = tab.offsetWidth || 100;
        const minLeft = tabWidth / 2;
        const maxLeft = ddRect.width - tabWidth / 2;
        const constrainedLeft = Math.max(minLeft, Math.min(maxLeft, rawLeft));
        const left = Math.round(constrainedLeft * 2) / 2;
        dropdown.style.setProperty('--attached-tab-left', `${left}px`);
      } catch {}
    }

    function restoreRealTab(tabEl?: HTMLElement | null) {
      const tab = tabEl || currentAttachedTab;
      if (!tab) return;
      const home = tabHomes.get(tab);
      if (!home) return;
      const prevTransition = tab.style.transition;
      tab.style.transition = 'none';
      tab.classList.remove('attached-tab');
      tab.style.removeProperty('pointer-events');
      const { parent, nextSibling, placeholder, widthPx } = home;
      tab.style.width = `${widthPx}px`;
      tab.style.flex = `0 0 ${widthPx}px`;
      parent.insertBefore(tab, nextSibling);
      requestAnimationFrame(() => {
        placeholder.remove();
        requestAnimationFrame(() => {
          tab.style.removeProperty('width');
          tab.style.removeProperty('flex');
        });
      });
      requestAnimationFrame(() => {
        tab.style.transition = prevTransition || '';
      });
      tabHomes.delete(tab);
      if (currentAttachedTab === tab) currentAttachedTab = null;
    }

    // Toggle dropdown
    let isClosing = false;
    function closeOverlay() {
      if (!dropdown || !dropdown.classList.contains('open') || isClosing) return;
      isClosing = true;
      updateAttachedTabPosition();
      positionOverlay();
      dropdown.classList.add('closing');
      const finalize = () => {
        if (currentAttachedTab) restoreRealTab(currentAttachedTab);
        navTabs.forEach(t => t.classList.remove('active'));
        isClosing = false;
        dropdown.classList.remove('closing');
        dropdown.classList.remove('open');
      };
      const onDone = (ev: TransitionEvent) => {
        if (ev.target !== dropdown) return;
        if (ev.propertyName !== 'transform') return;
        dropdown.removeEventListener('transitionend', onDone);
        clearTimeout(fallback);
        finalize();
      };
      dropdown.addEventListener('transitionend', onDone);
      const fallback = setTimeout(finalize, 1200);
    }

    function toggleDropdown(widgetType: 'category' | 'featured' | 'keywords') {
      if (!dropdown) return;
      const clickedTab = document.querySelector(`[data-tab="${widgetType}"]`) as HTMLElement | null;
      const isOpen = dropdown.classList.contains('open');
      const isSame = clickedTab ? clickedTab.classList.contains('active') : false;

      if (isOpen && isSame) {
        closeOverlay();
        return;
      }

      navTabs.forEach(t => t.classList.remove('active'));
      if (clickedTab) clickedTab.classList.add('active');

      // Content
      if (dropdownWrapper) {
        dropdownWrapper.innerHTML = '';
        let widget: Element | null = null;
        if (widgetType === 'category') widget = categoryWidget;
        if (widgetType === 'featured') widget = featuredWidget;
        if (widgetType === 'keywords') widget = keywordsWidget;
        if (widget) {
          dropdownWrapper.appendChild(widget.cloneNode(true));
          const widgetElement = dropdownWrapper.querySelector('.widget') as HTMLElement | null;
          if (widgetElement) widgetElement.style.display = 'block';
        }
      }

      positionOverlay();
      attachRealTab(clickedTab);
      dropdown.classList.add('open');
    }

    // Tab click handlers
    navTabs.forEach(tab => {
      tab.addEventListener('click', (e) => {
        e.preventDefault();
        const t = tab.getAttribute('data-tab');
        if (t) toggleDropdown(t as 'category' | 'featured' | 'keywords');
      });
    });

    // Category filtering functionality
    function filterAssetsByCategory(selectedCategory: string) {
      const allCards = document.querySelectorAll<HTMLElement>('.asset-card');

      allCards.forEach(card => {
        const cardCategory = card.getAttribute('data-category');
        if (selectedCategory === 'all' || cardCategory === selectedCategory) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // Keywords filtering functionality
    function filterAssetsByKeyword(selectedKeyword: string) {
      const allCards = document.querySelectorAll<HTMLElement>('.asset-card');

      allCards.forEach(card => {
        const cardKeywords = card.getAttribute('data-keywords') || '';
        if (cardKeywords.includes(selectedKeyword)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // Handle category button clicks (event delegation for cloned elements)
    document.addEventListener('click', (e) => {
      const target = e.target as HTMLElement; // Cast e.target once

      if (target.classList.contains('category-btn')) {
        e.preventDefault();

        // Get the selected category
        const selectedCategory = target.getAttribute('data-category');

        // Update active state of buttons within the same container
        const container = target.closest<HTMLElement>('.category-buttons'); // Cast closest result
        if (container) {
          container.querySelectorAll<HTMLButtonElement>('.category-btn').forEach(btn => { // Cast querySelectorAll result
            btn.classList.remove('active');
          });
          target.classList.add('active');
        }

        // Filter the assets
        if (selectedCategory) filterAssetsByCategory(selectedCategory); // Add null check
        return;
      }

      // Handle keyword tag clicks
      if (target.classList.contains('keyword-tag')) {
        e.preventDefault();

        // Get the selected keyword
        const selectedKeyword = target.getAttribute('data-keyword');

        // Update active state of keyword tags within the same container
        const container = target.closest<HTMLElement>('.keyword-tags'); // Cast closest result
        if (container) {
          container.querySelectorAll<HTMLButtonElement>('.keyword-tag').forEach(tag => { // Cast querySelectorAll result
            tag.classList.remove('active');
          });
          target.classList.add('active');
        }

        // Filter the assets by keyword
        if (selectedKeyword) filterAssetsByKeyword(selectedKeyword); // Add null check
        return;
      }

      // Outside click handling
      const tgt = e.target as HTMLElement | null;
      const inside = tgt && (tgt.closest('.header-tabs-container') || tgt.closest('.assets-dropdown-content'));
      if (!inside && dropdown && dropdown.classList.contains('open')) closeOverlay();
    });

    // Add resize handler to unlock tabs row on mobile and auto-close dropdowns
    let wasDesktop = window.innerWidth > 480;
    window.addEventListener('resize', () => {
      positionOverlay();
      if (!isClosing) updateAttachedTabPosition();

      const isNowMobile = window.innerWidth <= 480;
      const isNowDesktop = window.innerWidth > 480;

      // Auto-close dropdown when switching from desktop to mobile while extended
      if (wasDesktop && isNowMobile && dropdown && dropdown.classList.contains('open')) {
        // Instant close for responsive breakpoint changes
        if (currentAttachedTab) restoreRealTab(currentAttachedTab);
        navTabs.forEach(t => t.classList.remove('active'));
        dropdown.classList.remove('open');
        dropdown.classList.remove('closing');
      }

      // Update breakpoint state
      wasDesktop = isNowDesktop;
    });
    window.addEventListener('scroll', () => { positionOverlay(); if (!isClosing) updateAttachedTabPosition(); }, { passive: true });
    positionOverlay();

    // Slide-out pill navigation functionality
    const slideOutCard = document.getElementById('slideOutCard');
    const pillButtons = document.querySelectorAll<HTMLButtonElement>('.pill-button');
    let activeButton: HTMLButtonElement | null = null;

    // Content for each filter type
    const filterContent = {
      category: `
        <div class="sidebar-section">
          <div class="section-header">
            <h3><i class="fas fa-folder"></i> Browse by Section</h3>
            <p class="section-description">Filter content by website areas</p>
          </div>
          <div class="category-buttons">
            <button class="category-btn active" data-category="all">All<br>Assets</button>
            <button class="category-btn" data-category="templates">Templates</button>
            <button class="category-btn" data-category="checklists">Checklists</button>
            <button class="category-btn" data-category="guides">Guides</button>
            <button class="category-btn" data-category="tools">Tools</button>
          </div>
        </div>
      `,
      featured: `
        <div class="sidebar-section">
          <div class="section-header">
            <h3><i class="fas fa-star"></i> Featured Pages</h3>
            <p class="section-description">Most visited and recommended content</p>
          </div>
          <div class="featured-grid">
            <a href="#" class="featured-item popular">
              <div class="featured-icon"><i class="fas fa-palette"></i></div>
              <div class="featured-info">
                <h4>Design System Template</h4>
                <span class="featured-badge">Most Popular</span>
              </div>
            </a>
            <a href="#" class="featured-item essential">
              <div class="featured-icon"><i class="fas fa-check-circle"></i></div>
              <div class="featured-info">
                <h4>WCAG Checklist</h4>
                <span class="featured-badge">Essential</span>
              </div>
            </a>
            <a href="#" class="featured-item showcase">
              <div class="featured-icon"><i class="fas fa-eye"></i></div>
              <div class="featured-info">
                <h4>Screen Reader Guide</h4>
                <span class="featured-badge">New Release</span>
              </div>
            </a>
          </div>
        </div>
      `,
      keywords: `
        <div class="sidebar-section">
          <div class="section-header">
            <h3><i class="fas fa-tags"></i> Search Keywords</h3>
            <p class="section-description">Quick search by popular terms</p>
          </div>
          <div class="keyword-cloud">
            <button class="keyword-pill featured" data-keyword="accessibility">accessibility</button>
            <button class="keyword-pill popular" data-keyword="wcag">wcag</button>
            <button class="keyword-pill" data-keyword="design">design</button>
            <button class="keyword-pill" data-keyword="templates">templates</button>
            <button class="keyword-pill trending" data-keyword="testing">testing</button>
            <button class="keyword-pill" data-keyword="mobile">mobile</button>
            <button class="keyword-pill" data-keyword="forms">forms</button>
            <button class="keyword-pill" data-keyword="compliance">compliance</button>
            <button class="keyword-pill" data-keyword="tools">tools</button>
            <button class="keyword-pill" data-keyword="guides">guides</button>
          </div>
        </div>
      `
    };

    pillButtons.forEach((button) => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const filter = button.dataset.filter as keyof typeof filterContent | undefined;

        // If clicking the same button, close it
        if (activeButton === button) {
          closeSlideOut();
          return;
        }

        // If another button is active, close it first
        if (activeButton) {
          activeButton.classList.remove('active');
        }

        // Activate clicked button - sidebar starts first to sync with tab
        activeButton = button;

        // Update card content
        const cardContent = document.getElementById('cardContent') as HTMLElement | null;
        if (cardContent && filter && filter in filterContent) {
          cardContent.innerHTML = filterContent[filter] || '';
        }

        // Start both simultaneously for perfect sync
        slideOutCard?.classList.add('open');
        button.classList.add('active');
      });
    });

    function closeSlideOut() {
      if (!slideOutCard) return; // Add null check here
      // Close both simultaneously for perfect sync
      slideOutCard.classList.remove('open');
      if (activeButton) {
        activeButton.classList.remove('active');
        activeButton = null;
      }
    }

    // Close when clicking outside
    document.addEventListener('click', (e: MouseEvent) => {
      const tgt = e.target as HTMLElement | null;
      const inside = tgt && (tgt.closest('.page-nav-pills') || tgt.closest('.slide-out-card'));
      if (!inside && dropdown && dropdown.classList.contains('open')) closeOverlay();
    });

    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeSlideOut();
      }
    });

    // Add scroll behavior - hide on scroll down, show on scroll up
    let lastScrollY = window.scrollY;
    let isScrollingDown = false;
    let scrollThreshold = 50;

    function handleScroll() {
      const pillNav = document.querySelector<HTMLElement>('.page-nav-pills');
      const slideOutCard = document.querySelector<HTMLElement>('.slide-out-card');

      if (!pillNav || !slideOutCard) return; // Add null check here

      // Check if sidebar is open - if so, pills are in "pinned" state
      const sidebarIsOpen = slideOutCard.classList.contains('open'); // slideOutCard is now guaranteed not null

      // If sidebar is open (pinned state), completely skip scroll hide logic
      if (sidebarIsOpen) {
        console.log('📌 Pills are pinned (sidebar open) - staying visible');
        // Ensure both pills and sidebar stay visible
        pillNav.style.opacity = '1';
        pillNav.style.visibility = 'visible';
        pillNav.style.transform = 'translateX(0)';
        slideOutCard.style.opacity = '1';
        slideOutCard.style.visibility = 'visible';
        slideOutCard.style.transform = 'translateX(0)';
        lastScrollY = window.scrollY;
        return;
      }

      // Only run scroll logic if not pinned
      const currentScrollY = window.scrollY;
      const scrollDifference = Math.abs(currentScrollY - lastScrollY);

      // Only trigger if scroll difference is significant
      if (scrollDifference < scrollThreshold) return;

      isScrollingDown = currentScrollY > lastScrollY;

      if (isScrollingDown) {
        // Hide pill buttons when scrolling down (only when not pinned)
        console.log('📜⬇️ Hiding pills on scroll down');
        pillNav.style.opacity = '0';
        pillNav.style.visibility = 'hidden';
        pillNav.style.transform = 'translateX(100px)';
      } else {
        // Show pill buttons when scrolling up
        console.log('📜⬆️ Showing pills on scroll up');
        pillNav.style.opacity = '1';
        pillNav.style.visibility = 'visible';
        pillNav.style.transform = 'translateX(0)';
      }

      lastScrollY = currentScrollY;
    }

    // Add scroll listener with throttling
    let scrollTimeout: ReturnType<typeof setTimeout> | undefined;
    window.addEventListener('scroll', () => {
      if (scrollTimeout) clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(handleScroll, 10);
    }, { passive: true });

    console.log('✅ Assets slide-out navigation loaded');
  });
</script>
