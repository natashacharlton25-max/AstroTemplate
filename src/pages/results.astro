---
import Layout from '@/layouts/Layout.astro';
import { siteConfig } from '@/site.config';

const { url } = Astro;
const searchParams = new URLSearchParams(url.search);
const filterType = searchParams.get('type') || 'all';
const filterValue = searchParams.get('value') || '';
const searchQuery = searchParams.get('q') || '';
const page = parseInt(searchParams.get('page') || '1');

// Website content data - includes pages, blog posts, projects, and resources
const allContent = [
  // Blog Posts
  {
    id: 1,
    title: "Getting Started with Astro",
    excerpt: "Learn the fundamentals of building static sites with Astro framework and modern web technologies.",
    slug: "getting-started-with-astro",
    url: "/blog/getting-started-with-astro",
    publishedAt: "2024-01-15",
    category: "blog",
    tags: ["Astro", "Static Sites", "JavaScript", "Tutorial"],
    author: "John Doe",
    readTime: "5 min read",
    type: "blog"
  },
  {
    id: 2,
    title: "Advanced TypeScript Patterns",
    excerpt: "Explore advanced TypeScript patterns and techniques for building robust applications.",
    slug: "advanced-typescript-patterns",
    url: "/blog/advanced-typescript-patterns",
    publishedAt: "2024-01-10",
    category: "blog",
    tags: ["TypeScript", "Patterns", "JavaScript", "Advanced"],
    author: "Jane Smith",
    readTime: "8 min read",
    type: "blog"
  },
  {
    id: 3,
    title: "Modern CSS Grid Layouts",
    excerpt: "Master CSS Grid to create complex, responsive layouts with ease and flexibility.",
    slug: "modern-css-grid-layouts",
    url: "/blog/modern-css-grid-layouts",
    publishedAt: "2024-01-05",
    category: "blog",
    tags: ["CSS", "Grid", "Layouts", "Responsive"],
    author: "Mike Johnson",
    readTime: "6 min read",
    type: "blog"
  },

  // Pages
  {
    id: 10,
    title: "About Our Company",
    excerpt: "Learn about our mission, values, and the team behind our success.",
    slug: "about",
    url: "/about",
    publishedAt: "2024-01-01",
    category: "pages",
    tags: ["about", "company", "mission", "team", "values"],
    author: "Company",
    readTime: "3 min read",
    type: "page"
  },
  {
    id: 11,
    title: "Our Services",
    excerpt: "Comprehensive overview of the services we offer to help your business grow.",
    slug: "services",
    url: "/services",
    publishedAt: "2024-01-01",
    category: "pages",
    tags: ["services", "business", "solutions", "consulting"],
    author: "Company",
    readTime: "4 min read",
    type: "page"
  },
  {
    id: 12,
    title: "Contact Information",
    excerpt: "Get in touch with us. Find our contact details and office locations.",
    slug: "contact",
    url: "/contact",
    publishedAt: "2024-01-01",
    category: "pages",
    tags: ["contact", "information", "office", "phone", "email"],
    author: "Company",
    readTime: "2 min read",
    type: "page"
  },
  {
    id: 13,
    title: "Portfolio Showcase",
    excerpt: "Explore our best work and successful project case studies.",
    slug: "portfolio",
    url: "/portfolio",
    publishedAt: "2024-01-01",
    category: "pages",
    tags: ["portfolio", "showcase", "projects", "case studies", "work"],
    author: "Company",
    readTime: "5 min read",
    type: "page"
  },

  // Projects
  {
    id: 20,
    title: "E-commerce Platform Development",
    excerpt: "Modern, scalable e-commerce solution built with cutting-edge technology.",
    slug: "ecommerce-platform",
    url: "/projects/ecommerce-platform",
    publishedAt: "2024-01-01",
    category: "projects",
    tags: ["ecommerce", "platform", "scalable", "technology", "development"],
    author: "Development Team",
    readTime: "6 min read",
    type: "project"
  },
  {
    id: 21,
    title: "Mobile App Development",
    excerpt: "Cross-platform mobile application with seamless user experience.",
    slug: "mobile-app",
    url: "/projects/mobile-app",
    publishedAt: "2024-01-01",
    category: "projects",
    tags: ["mobile", "app", "development", "cross platform", "UX"],
    author: "Development Team",
    readTime: "7 min read",
    type: "project"
  },
  {
    id: 22,
    title: "Brand Identity Redesign",
    excerpt: "Complete brand overhaul including logo, guidelines, and marketing materials.",
    slug: "brand-redesign",
    url: "/projects/brand-redesign",
    publishedAt: "2024-01-01",
    category: "projects",
    tags: ["brand", "identity", "redesign", "logo", "marketing"],
    author: "Design Team",
    readTime: "5 min read",
    type: "project"
  },

  // Resources
  {
    id: 30,
    title: "Free Design Templates",
    excerpt: "Collection of high-quality design templates for various business needs.",
    slug: "design-templates",
    url: "/resources/design-templates",
    publishedAt: "2024-01-01",
    category: "resources",
    tags: ["templates", "design", "business", "free", "downloads"],
    author: "Design Team",
    readTime: "3 min read",
    type: "resource"
  },
  {
    id: 31,
    title: "Business Planning Toolkit",
    excerpt: "Comprehensive toolkit with templates and guides for business planning.",
    slug: "business-toolkit",
    url: "/resources/business-toolkit",
    publishedAt: "2024-01-01",
    category: "resources",
    tags: ["business", "planning", "toolkit", "templates", "guides"],
    author: "Business Team",
    readTime: "8 min read",
    type: "resource"
  },
  {
    id: 32,
    title: "SEO Guide for Beginners",
    excerpt: "Everything you need to know to get started with search engine optimization.",
    slug: "seo-guide",
    url: "/resources/seo-guide",
    publishedAt: "2024-01-01",
    category: "resources",
    tags: ["SEO", "guide", "beginners", "optimization", "search"],
    author: "Marketing Team",
    readTime: "10 min read",
    type: "resource"
  }
];

// Filter content based on the filter type, value, and search query
let filteredContent = allContent;
let pageTitle = "All Content";
let displayTitle = "All Content";

// Apply search query filter first if present
if (searchQuery) {
  filteredContent = filteredContent.filter(item =>
    item.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
    item.excerpt.toLowerCase().includes(searchQuery.toLowerCase()) ||
    item.category.toLowerCase().includes(searchQuery.toLowerCase()) ||
    item.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))
  );
  pageTitle = "Search Results";
  displayTitle = `Search results for "${searchQuery}"`;
}

// Apply additional filters if search query is not the primary filter
if (filterType === 'category' && filterValue && !searchQuery) {
  filteredContent = allContent.filter(item =>
    item.category.toLowerCase() === filterValue.toLowerCase()
  );
  pageTitle = "Search Results";
  displayTitle = `Content in "${filterValue}"`;
} else if (filterType === 'tag' && filterValue && !searchQuery) {
  filteredContent = allContent.filter(item =>
    item.tags.some(tag => tag.toLowerCase() === filterValue.toLowerCase())
  );
  pageTitle = "Search Results";
  displayTitle = `Content tagged with "${filterValue}"`;
} else if (filterType === 'archive' && filterValue && !searchQuery) {
  const [year, month] = filterValue.split('-');
  filteredContent = allContent.filter(item => {
    const itemDate = new Date(item.publishedAt);
    const itemYear = itemDate.getFullYear().toString();
    const itemMonth = (itemDate.getMonth() + 1).toString().padStart(2, '0');
    return itemYear === year && (!month || itemMonth === month);
  });

  pageTitle = "Search Results";
  if (month) {
    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
      'July', 'August', 'September', 'October', 'November', 'December'];
    displayTitle = `Content from ${monthNames[parseInt(month) - 1]} ${year}`;
  } else {
    displayTitle = `Content from ${year}`;
  }
} else if (!searchQuery && !filterType) {
  pageTitle = "Search";
  displayTitle = "All Content";
}


// Format date function
function formatDate(dateString: string): string {
  const options: Intl.DateTimeFormatOptions = {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  };
  return new Date(dateString).toLocaleDateString('en-US', options);
}
---

<Layout
  title={`${pageTitle} | ${siteConfig.brand.name}`}
  description={`Browse ${pageTitle.toLowerCase()} on ${siteConfig.brand.name}`}
>
  <main class="page-content">
    <!-- Page Header with Red Background - Simple Title Only -->
    <section class="page-header">
      <div class="page-header-content">
        <h1>{pageTitle}</h1>
      </div>

      <!-- Simple top-right pill navigation -->
      <div class="page-nav-pills">
        <button class="pill-button" data-filter="categories" aria-label="Search Categories">
          <span class="pill-text">Categories</span>
        </button>
        <button class="pill-button" data-filter="keywords" aria-label="Keywords">
          <span class="pill-text">Keywords</span>
        </button>
        <button class="pill-button" data-filter="featured" aria-label="Featured">
          <span class="pill-text">Featured</span>
        </button>
      </div>

      <!-- Slide-out card that follows the button -->
      <div class="slide-out-card" id="slideOutCard">
        <div class="card-content" id="cardContent">
          <!-- Content will be loaded here based on selected filter -->
        </div>
      </div>
    </section>

    <!-- Dropdown Content Area for results tabs -->
    <section class="results-dropdown-content" id="resultsDropdownContent">
      <div class="dropdown-content-wrapper"></div>
    </section>

    <!-- Mobile Collapsible Content Area -->
    <section class="mobile-collapsible-content" id="mobileCollapsibleContent">
      <!-- Search In Widget -->
      <div class="mobile-section" id="mobileSearchInSection" style="display: none;">
        <div class="mobile-section-content">
          <h3>Search in:</h3>
          <div class="category-buttons">
            <button class="category-btn active" data-category="all">All<br>Website</button>
            <button class="category-btn" data-category="pages">Pages</button>
            <button class="category-btn" data-category="blog">Blog</button>
            <button class="category-btn" data-category="projects">Projects</button>
            <button class="category-btn" data-category="resources">Resources</button>
          </div>
        </div>
      </div>

      <!-- Keywords Widget -->
      <div class="mobile-section" id="mobileKeywordsSection" style="display: none;">
        <div class="mobile-section-content">
          <h3>Popular keywords:</h3>
          <div class="keyword-tags">
            <button class="keyword-tag" data-keyword="about">about</button>
            <button class="keyword-tag" data-keyword="services">services</button>
            <button class="keyword-tag" data-keyword="portfolio">portfolio</button>
            <button class="keyword-tag" data-keyword="contact">contact</button>
            <button class="keyword-tag" data-keyword="projects">projects</button>
            <button class="keyword-tag" data-keyword="experience">experience</button>
            <button class="keyword-tag" data-keyword="skills">skills</button>
            <button class="keyword-tag" data-keyword="testimonials">testimonials</button>
            <button class="keyword-tag" data-keyword="blog">blog</button>
            <button class="keyword-tag" data-keyword="resources">resources</button>
          </div>
        </div>
      </div>

      <!-- Featured Widget -->
      <div class="mobile-section" id="mobileFeaturedSection" style="display: none;">
        <div class="mobile-section-content">
          <h3>Featured Content</h3>
          <div class="featured-cards">
            <a href="/about" class="featured-card">
              <div class="featured-content">
                <h4>About Our Company</h4>
                <span class="featured-meta">Most Popular</span>
              </div>
            </a>
            <a href="/contact" class="featured-card">
              <div class="featured-content">
                <h4>Get In Touch</h4>
                <span class="featured-meta">Recommended</span>
              </div>
            </a>
            <a href="/services" class="featured-card">
              <div class="featured-content">
                <h4>Our Services</h4>
                <span class="featured-meta">Trending</span>
              </div>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Title and Navigation Section -->
    <section class="title-nav-section">
      <div class="main-content-wrapper content-aligned">
        <div class="title-nav-wrapper">
          <!-- Left side: Title and Breadcrumb -->
          <div class="title-breadcrumb">
            <h2 class="display-title">{displayTitle}</h2>
            <nav class="breadcrumb">
              <a href="/" class="breadcrumb-link">Home</a>
              <span class="breadcrumb-separator">›</span>
              <a href="/insights" class="breadcrumb-link">Insights</a>
              <span class="breadcrumb-separator">›</span>
              <span class="breadcrumb-current">Results</span>
            </nav>
          </div>

          <!-- Right side: Search Bar -->
          <div class="search-container">
            <form class="search-form" method="get">
              <div class="search-input-wrapper">
                <svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M21 21L15.5 15.5M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                <input
                  type="text"
                  name="q"
                  value={searchQuery}
                  placeholder="Search"
                  class="search-input"
                  aria-label="Search insights"
                />
                <button type="submit" class="search-submit" aria-label="Search">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                    <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
              </div>
              {filterType && filterType !== 'all' && !searchQuery && (
                <input type="hidden" name="type" value={filterType} />
              )}
              {filterValue && !searchQuery && (
                <input type="hidden" name="value" value={filterValue} />
              )}
            </form>
          </div>
        </div>
      </div>
    </section>

    <!-- Content Section - widgets for dropdown functionality only -->
    <section class="content-section">
      <div class="container content-aligned">
        <!-- Always show content sections for dropdown functionality -->
        <div class="content-sections" style="display: none;">
            <!-- Search Categories -->
            <div class="content-section widget" id="searchInWidget" style="display: none;">
              <div class="category-buttons">
                <button class="category-btn active" data-category="all">All<br>Website</button>
                <button class="category-btn" data-category="pages">Pages</button>
                <button class="category-btn" data-category="blog">Blog</button>
                <button class="category-btn" data-category="projects">Projects</button>
                <button class="category-btn" data-category="resources">Resources</button>
              </div>
            </div>

            <!-- Popular Keywords -->
            <div class="content-section widget" id="keywordsWidget" style="display: none;">
              <div class="keyword-tags">
                <button class="keyword-tag" data-keyword="about">about</button>
                <button class="keyword-tag" data-keyword="services">services</button>
                <button class="keyword-tag" data-keyword="portfolio">portfolio</button>
                <button class="keyword-tag" data-keyword="contact">contact</button>
                <button class="keyword-tag" data-keyword="projects">projects</button>
                <button class="keyword-tag" data-keyword="experience">experience</button>
                <button class="keyword-tag" data-keyword="skills">skills</button>
                <button class="keyword-tag" data-keyword="testimonials">testimonials</button>
                <button class="keyword-tag" data-keyword="blog">blog</button>
                <button class="keyword-tag" data-keyword="resources">resources</button>
              </div>
            </div>

            <!-- Default Content -->
            <div class="content-section">
              <div class="default-content">
                <p>Use the tabs above to explore different ways to find content, discover popular keywords, or browse our featured selections. You can also use the search bar to find specific information across our website.</p>
                <p>Start by clicking on one of the navigation tabs above to see available options, or enter a search term in the search box.</p>
              </div>
            </div>


            <!-- Featured Posts (Combined Suggested & Popular) -->
            <div class="content-section widget" id="featuredWidget" style="display: none;">
              <div class="featured-cards">
                <a href="/about" class="featured-card">
                  <div class="featured-content">
                    <h4>About Our Company</h4>
                    <span class="featured-meta">Most Popular</span>
                  </div>
                </a>
                <a href="/contact" class="featured-card">
                  <div class="featured-content">
                    <h4>Get In Touch</h4>
                    <span class="featured-meta">Recommended</span>
                  </div>
                </a>
                <a href="/services" class="featured-card">
                  <div class="featured-content">
                    <h4>Our Services</h4>
                    <span class="featured-meta">Trending</span>
                  </div>
                </a>
                <a href="/portfolio" class="featured-card">
                  <div class="featured-content">
                    <h4>Portfolio</h4>
                    <span class="featured-meta">Showcase</span>
                  </div>
                </a>
                <a href="/team" class="featured-card">
                  <div class="featured-content">
                    <h4>Our Team</h4>
                    <span class="featured-meta">Meet Us</span>
                  </div>
                </a>
                <a href="/resources" class="featured-card">
                  <div class="featured-content">
                    <h4>Resources</h4>
                    <span class="featured-meta">Free Tools</span>
                  </div>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Results Section - Direct to page level, not in containers -->
    <div class="main-content-wrapper content-aligned" style="padding-top: 0.25rem;">
      {filteredContent.length > 0 ? (
        <div class="entries">
          {filteredContent.map((item) => (
            <article class="entry-card" itemscope itemtype="https://schema.org/BlogPosting">
              <div class="card-header">
                <div class="meta-categories">
                  <a href={`/results?type=category&value=${encodeURIComponent(item.category)}`} class="category-pill" itemprop="about">
                    {item.category}
                  </a>
                </div>
                <div class="meta-date">
                  <time datetime={item.publishedAt} itemprop="datePublished">
                    {formatDate(item.publishedAt)}
                  </time>
                </div>
              </div>

              <h2 class="entry-title" itemprop="headline">
                <a href={item.url} itemprop="url">{item.title}</a>
              </h2>

              <p class="entry-excerpt" itemprop="description">
                {item.excerpt}
              </p>

              <div class="card-footer">
                <div class="meta-tags">
                  <div class="tags-container">
                    {item.tags.map((tag) => (
                      <a href={`/results?type=tag&value=${encodeURIComponent(tag)}`} class="tag-pill" itemprop="keywords">
                        {tag}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </article>
          ))}
        </div>
      ) : (
        <div class="no-results">
          <h2>No results found</h2>
          <p>Sorry, we couldn't find any results matching your criteria.</p>
          <button onclick="history.back()" class="back-link">← Back</button>
        </div>
      )}
    </div>
  </main>
</Layout>

<script>
  // @ts-nocheck
  // Category button functionality and results header tabs
  document.addEventListener('DOMContentLoaded', () => {
    const categoryBtns = document.querySelectorAll('.category-btn');
    const keywordTags = document.querySelectorAll('.keyword-tag');
    const searchInput = document.querySelector('.search-input');
    const searchForm = document.querySelector('.search-form');

    // Tabs
    const navTabs = document.querySelectorAll('.results-nav-tab');
    const dropdown = document.getElementById('resultsDropdownContent');
    const dropdownWrapper = dropdown ? dropdown.querySelector('.dropdown-content-wrapper') : null;
    const pageHeader = document.querySelector('.page-header');
    const tabsRow = document.querySelector('.results-nav-tabs');

    // Widgets
    const searchInWidget = document.getElementById('searchInWidget');
    const keywordsWidget = document.getElementById('keywordsWidget');
    const featuredWidget = document.getElementById('featuredWidget');


    // Position overlay under header
    function positionOverlay() {
      if (!dropdown || !pageHeader) return;
      const rect = pageHeader.getBoundingClientRect();
      dropdown.style.setProperty('--dropdown-top', `${rect.bottom}px`);
    }

    // Move real tab into overlay and restore
    /** @type {WeakMap<HTMLElement, { parent: Node; nextSibling: ChildNode | null; placeholder: HTMLElement; widthPx: number; correctLeft?: number }>} */
    const tabHomes = new WeakMap();
    let /** @type {HTMLElement | null} */ currentAttachedTab = null;

    function attachRealTab(/** @type {HTMLElement | null | undefined} */ tabEl = undefined) {
      if (!dropdown || !(tabEl instanceof HTMLElement)) return;
      const tab = tabEl;
      if (currentAttachedTab === tab) return;

      // Calculate and store the correct position BEFORE any layout changes
      const rect = tab.getBoundingClientRect();
      const ddRect = dropdown.getBoundingClientRect();
      const correctLeft = rect.left - ddRect.left + rect.width / 2;

      const phW = Math.round(rect.width);
      const phH = Math.round(rect.height);
      const placeholder = document.createElement('span');
      placeholder.className = 'tab-placeholder';
      placeholder.style.display = 'inline-flex';
      placeholder.style.width = `${phW}px`;
      placeholder.style.height = `${phH}px`;
      placeholder.style.flex = `0 0 ${phW}px`;

      const parent = tab.parentNode;
      const nextSibling = tab.nextSibling;
      tabHomes.set(tab, { parent, nextSibling, placeholder, widthPx: phW, correctLeft });

      // NOW restore the previous tab (this changes layout)
      if (currentAttachedTab && currentAttachedTab !== tab) {
        restoreRealTab(currentAttachedTab);
      }

      // Insert placeholder and attach new tab
      parent.insertBefore(placeholder, tab);
      dropdown.appendChild(tab);
      tab.classList.add('attached-tab');
      tab.style.pointerEvents = 'auto';
      tab.style.width = `${phW}px`;
      tab.style.flex = `0 0 ${phW}px`;

      updateAttachedTabPosition(tab);
      currentAttachedTab = tab;
    }

    function updateAttachedTabPosition(/** @type {HTMLElement | null | undefined} */ tabEl = undefined) {
      const tab = tabEl || currentAttachedTab;
      if (!dropdown || !tab) return;
      const home = tabHomes.get(tab);
      if (!home) return;
      try {
        const ddRect = dropdown.getBoundingClientRect();

        // Use the stored correct position if available
        let rawLeft;
        if (home.correctLeft !== undefined) {
          rawLeft = home.correctLeft;
        } else {
          // Fallback to placeholder position
          const phRect = home.placeholder.getBoundingClientRect();
          rawLeft = phRect.left - ddRect.left + phRect.width / 2;
        }

        const tabWidth = tab.offsetWidth || 100;
        const minLeft = tabWidth / 2;
        const maxLeft = ddRect.width - tabWidth / 2;
        const constrainedLeft = Math.max(minLeft, Math.min(maxLeft, rawLeft));
        const left = Math.round(constrainedLeft * 2) / 2; // snap to 0.5px
        dropdown.style.setProperty('--attached-tab-left', `${left}px`);
      } catch {}
    }

    function restoreRealTab(/** @type {HTMLElement | null | undefined} */ tabEl = undefined) {
      const tab = tabEl || currentAttachedTab;
      if (!tab) return;
      const home = tabHomes.get(tab);
      if (!home) return;
      const prevTransition = tab.style.transition;
      tab.style.transition = 'none';
      tab.classList.remove('attached-tab');
      tab.style.removeProperty('pointer-events');
      const { parent, nextSibling, placeholder, widthPx } = home;
      tab.style.width = `${widthPx}px`;
      tab.style.flex = `0 0 ${widthPx}px`;
      parent.insertBefore(tab, nextSibling);
      requestAnimationFrame(() => {
        placeholder.remove();
        requestAnimationFrame(() => {
          tab.style.removeProperty('width');
          tab.style.removeProperty('flex');
        });
      });
      requestAnimationFrame(() => {
        tab.style.transition = prevTransition || '';
      });
      tabHomes.delete(tab);
      if (currentAttachedTab === tab) currentAttachedTab = null;
    }

    // Toggle
    let isClosing = false;
    function closeOverlay() {
      if (!dropdown || !dropdown.classList.contains('open') || isClosing) return;
      isClosing = true;
      updateAttachedTabPosition();
      positionOverlay();
      dropdown.classList.add('closing');
      const finalize = () => {
        if (currentAttachedTab) restoreRealTab(currentAttachedTab);
        navTabs.forEach(t => t.classList.remove('active'));
        isClosing = false;
        dropdown.classList.remove('closing');
        dropdown.classList.remove('open');
      };
      const onDone = (/** @type {TransitionEvent} */ ev) => {
        if (ev.target !== dropdown) return;
        if (ev.propertyName !== 'transform') return;
        dropdown.removeEventListener('transitionend', onDone);
        clearTimeout(fallback);
        finalize();
      };
      dropdown.addEventListener('transitionend', onDone);
      const fallback = setTimeout(finalize, 1200);
    }

    function toggleDropdown(/** @type {'searchin' | 'keywords' | 'featured'} */ widgetType) {
      if (!dropdown) return;
      const clickedTab = document.querySelector(`[data-tab="${widgetType}"]`);
      const isOpen = dropdown.classList.contains('open');
      const isSame = clickedTab ? clickedTab.classList.contains('active') : false;

      if (isOpen && isSame) {
        closeOverlay();
        return;
      }

      navTabs.forEach(t => t.classList.remove('active'));
      if (clickedTab) clickedTab.classList.add('active');

      // Content
      if (dropdownWrapper) {
        dropdownWrapper.innerHTML = '';
        /** @type {Element | null} */
        let widget = null;
        if (widgetType === 'searchin') widget = searchInWidget;
        if (widgetType === 'keywords') widget = keywordsWidget;
        if (widgetType === 'featured') widget = featuredWidget;


        if (widget) {
          dropdownWrapper.appendChild(widget.cloneNode(true));
          const widgetElement = dropdownWrapper.querySelector('.widget');
          if (widgetElement instanceof HTMLElement) widgetElement.style.display = 'block';
        }
      }

      positionOverlay();
      attachRealTab(clickedTab);
      dropdown.classList.add('open');
    }

    // Tab click
    navTabs.forEach(tab => {
      tab.addEventListener('click', (e) => {
        e.preventDefault();
        const t = tab.getAttribute('data-tab');
        if (t) toggleDropdown(t);
      });
    });


    // Positioning updates
    // Add resize handler to unlock tabs row on mobile and auto-close dropdowns
    let wasDesktop = window.innerWidth > 480;
    window.addEventListener('resize', () => {
      positionOverlay();
      if (!isClosing) updateAttachedTabPosition();

      const isNowMobile = window.innerWidth <= 480;
      const isNowDesktop = window.innerWidth > 480;

      // Auto-close dropdown when switching from desktop to mobile while extended
      if (wasDesktop && isNowMobile && dropdown && dropdown.classList.contains('open')) {
        // Instant close for responsive breakpoint changes
        if (currentAttachedTab) restoreRealTab(currentAttachedTab);
        navTabs.forEach(t => t.classList.remove('active'));
        dropdown.classList.remove('open');
        dropdown.classList.remove('closing');
      }

      // Update breakpoint state
      wasDesktop = isNowDesktop;
    });
    window.addEventListener('scroll', () => { positionOverlay(); if (!isClosing) updateAttachedTabPosition(currentAttachedTab); }, { passive: true });
    positionOverlay();

    // Handle button clicks with event delegation (for cloned elements too)
    document.addEventListener('click', (e) => {
      // Handle category button clicks
      if (e.target.classList.contains('category-btn')) {
        e.preventDefault();

        // Update active state within the same container
        const container = e.target.closest('.category-buttons');
        if (container) {
          container.querySelectorAll('.category-btn').forEach(btn => {
            btn.classList.remove('active');
          });
          e.target.classList.add('active');
        }

        // Get category and perform search
        const category = e.target.getAttribute('data-category');
        if (category && category !== 'all') {
          // Navigate to results with category filter
          window.location.href = `/results?type=category&value=${encodeURIComponent(category)}`;
        } else {
          // Show all results
          window.location.href = '/results';
        }
        return;
      }

      // Handle keyword tag clicks (both old and new styles)
      if (e.target.classList.contains('keyword-tag') || e.target.classList.contains('keyword-pill')) {
        e.preventDefault();

        // Update active state within the same container
        const container = e.target.closest('.keyword-tags') || e.target.closest('.keyword-cloud');
        if (container) {
          container.querySelectorAll('.keyword-tag, .keyword-pill').forEach(tag => {
            tag.classList.remove('active');
          });
          e.target.classList.add('active');
        }

        // Navigate to search results for this keyword
        const keyword = e.target.getAttribute('data-keyword');
        if (keyword) {
          window.location.href = `/results?q=${encodeURIComponent(keyword)}`;
        }
        return;
      }

      // Handle featured card clicks (already have href, just for consistency)
      if (e.target.closest('.featured-card')) {
        // Featured cards already have proper href attributes, no additional handling needed
        return;
      }

      // Outside click handling
      const tgt = e.target;
      const inside = tgt && tgt.closest && (tgt.closest('.header-tabs-container') || tgt.closest('.results-dropdown-content'));
      if (!inside && dropdown && dropdown.classList.contains('open')) closeOverlay();
    });

    // Slide-out pill navigation functionality
    const slideOutCard = document.getElementById('slideOutCard');
    const pillButtons = document.querySelectorAll('.pill-button');
    let activeButton = null;

    // Content for each filter type
    const filterContent = {
      categories: `
        <div class="sidebar-section">
          <div class="section-header">
            <h3><i class="fas fa-folder"></i> Browse by Section</h3>
            <p class="section-description">Filter content by website areas</p>
          </div>
          <div class="category-buttons">
            <button class="category-btn active" data-category="all">All<br>Website</button>
            <button class="category-btn" data-category="pages">Pages</button>
            <button class="category-btn" data-category="blog">Blog</button>
            <button class="category-btn" data-category="projects">Projects</button>
            <button class="category-btn" data-category="resources">Resources</button>
          </div>
        </div>
      `,
      keywords: `
        <div class="sidebar-section">
          <div class="section-header">
            <h3><i class="fas fa-tags"></i> Search Keywords</h3>
            <p class="section-description">Quick search by popular terms</p>
          </div>
          <div class="keyword-cloud">
            <button class="keyword-pill popular" data-keyword="about">about</button>
            <button class="keyword-pill" data-keyword="services">services</button>
            <button class="keyword-pill featured" data-keyword="portfolio">portfolio</button>
            <button class="keyword-pill" data-keyword="contact">contact</button>
            <button class="keyword-pill trending" data-keyword="projects">projects</button>
            <button class="keyword-pill" data-keyword="experience">experience</button>
            <button class="keyword-pill popular" data-keyword="skills">skills</button>
            <button class="keyword-pill" data-keyword="testimonials">testimonials</button>
            <button class="keyword-pill" data-keyword="blog">blog</button>
            <button class="keyword-pill featured" data-keyword="resources">resources</button>
          </div>
        </div>
      `,
      featured: `
        <div class="sidebar-section">
          <div class="section-header">
            <h3><i class="fas fa-star"></i> Featured Pages</h3>
            <p class="section-description">Most visited and recommended content</p>
          </div>
          <div class="featured-grid">
            <a href="/about" class="featured-item popular">
              <div class="featured-icon"><i class="fas fa-building"></i></div>
              <div class="featured-info">
                <h4>About Our Company</h4>
                <span class="featured-badge">Most Popular</span>
              </div>
            </a>
            <a href="/contact" class="featured-item recommended">
              <div class="featured-icon"><i class="fas fa-phone"></i></div>
              <div class="featured-info">
                <h4>Get In Touch</h4>
                <span class="featured-badge">Recommended</span>
              </div>
            </a>
            <a href="/services" class="featured-item trending">
              <div class="featured-icon"><i class="fas fa-bolt"></i></div>
              <div class="featured-info">
                <h4>Our Services</h4>
                <span class="featured-badge">Trending</span>
              </div>
            </a>
            <a href="/portfolio" class="featured-item showcase">
              <div class="featured-icon"><i class="fas fa-palette"></i></div>
              <div class="featured-info">
                <h4>Portfolio</h4>
                <span class="featured-badge">Showcase</span>
              </div>
            </a>
            <a href="/team" class="featured-item">
              <div class="featured-icon"><i class="fas fa-users"></i></div>
              <div class="featured-info">
                <h4>Our Team</h4>
                <span class="featured-badge">Meet Us</span>
              </div>
            </a>
            <a href="/resources" class="featured-item essential">
              <div class="featured-icon"><i class="fas fa-book"></i></div>
              <div class="featured-info">
                <h4>Resources</h4>
                <span class="featured-badge">Essential</span>
              </div>
            </a>
          </div>
        </div>
      `
    };

    pillButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const filter = button.dataset.filter;

        // If clicking the same button, close it
        if (activeButton === button) {
          closeSlideOut();
          return;
        }

        // If another button is active, close it first
        if (activeButton) {
          activeButton.classList.remove('active');
        }

        // Activate clicked button - sidebar starts first to sync with tab
        activeButton = button;

        // Update card content
        document.getElementById('cardContent').innerHTML = filterContent[filter] || '';

        // Start both simultaneously for perfect sync
        slideOutCard.classList.add('open');
        button.classList.add('active');
      });
    });

    function closeSlideOut() {
      // Close both simultaneously for perfect sync
      slideOutCard.classList.remove('open');
      if (activeButton) {
        activeButton.classList.remove('active');
        activeButton = null;
      }
    }

    // Close when clicking outside
    document.addEventListener('click', (e) => {
      if (!e.target.closest('.page-nav-pills') && !e.target.closest('.slide-out-card')) {
        closeSlideOut();
      }
    });

    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeSlideOut();
      }
    });

    // Add scroll behavior - hide on scroll down, show on scroll up
    let lastScrollY = window.scrollY;
    let isScrollingDown = false;
    let scrollThreshold = 50;

    function handleScroll() {
      const pillNav = document.querySelector('.page-nav-pills');
      const slideOutCard = document.querySelector('.slide-out-card');

      // Check if sidebar is open - if so, pills are in "pinned" state
      const sidebarIsOpen = slideOutCard && slideOutCard.classList.contains('open');

      // If sidebar is open (pinned state), completely skip scroll hide logic
      if (sidebarIsOpen) {
        console.log('📌 Pills are pinned (sidebar open) - staying visible');
        // Ensure both pills and sidebar stay visible
        pillNav.style.opacity = '1';
        pillNav.style.visibility = 'visible';
        pillNav.style.transform = 'translateX(0)';
        slideOutCard.style.opacity = '1';
        slideOutCard.style.visibility = 'visible';
        slideOutCard.style.transform = 'translateX(0)';
        lastScrollY = window.scrollY;
        return;
      }

      // Only run scroll logic if not pinned
      const currentScrollY = window.scrollY;
      const scrollDifference = Math.abs(currentScrollY - lastScrollY);

      // Only trigger if scroll difference is significant
      if (scrollDifference < scrollThreshold) return;

      isScrollingDown = currentScrollY > lastScrollY;

      if (isScrollingDown) {
        // Hide pill buttons when scrolling down (only when not pinned)
        console.log('📜⬇️ Hiding pills on scroll down');
        pillNav.style.opacity = '0';
        pillNav.style.visibility = 'hidden';
        pillNav.style.transform = 'translateX(100px)';
      } else {
        // Show pill buttons when scrolling up
        console.log('📜⬆️ Showing pills on scroll up');
        pillNav.style.opacity = '1';
        pillNav.style.visibility = 'visible';
        pillNav.style.transform = 'translateX(0)';
      }

      lastScrollY = currentScrollY;
    }

    // Add scroll listener with throttling
    let scrollTimeout: number | undefined;
    window.addEventListener('scroll', () => {
      if (scrollTimeout) clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(handleScroll, 10);
    }, { passive: true });

    console.log('✅ Results slide-out navigation loaded');
  });
  </script>

<style>
  .page-content {
    min-height: calc(100vh - 120px);
  }

  /* Use global page header styles - title only */
  .page-header h1 {
    font-size: clamp(1.8rem, 5vw, 4rem);
    font-weight: 200; /* Thin weight */
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin: 0;
    line-height: 1.2;
    color: #f5f5dc; /* Cream color */
  }

  .page-header { overflow: visible !important; /* Padding now handled by global unified styles */ }

  /* Protect pill navigation from footer reveal effects */
  body.tight .page-nav-pills,
  body.tight .slide-out-card {
    position: fixed !important;
    z-index: 999 !important;
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    transform: none !important;
  }

  /* Ensure pinned pills stay visible during footer reveal */
  body.tight .slide-out-card.open {
    right: 0 !important;
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
  }


  /* Simple top-right pill buttons */
  .page-nav-pills {
    position: fixed;
    top: calc(4rem + 60px); /* Moved up 50px to prevent bottom menu overlap */
    right: 0;
    z-index: 1001; /* Higher than bottom nav (999) but below hamburger (9999) */
    display: flex;
    gap: 4px;
    flex-direction: column;
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
  }

  .pill-button {
    width: 48px; /* Original visible size */
    height: 96px;
    border-radius: 12px 0 0 12px;
    background: var(--brand-background);
    border: 1px solid var(--color-primary);
    border-right: none;
    margin-right: -1px;
    color: var(--color-secondary);
    cursor: pointer;
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94), background-color 0s, border-color 0s; /* Transform animation + instant colors */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 12px 8px;
    box-shadow: -4px 2px 16px rgba(0, 0, 0, 0.15), -2px 0 8px rgba(230, 57, 97, 0.1), 0 2px 8px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    text-decoration: none;
    position: relative;
    z-index: 1002;
  }

  /* Hidden extension for better animation connection - always red */
  .pill-button::after {
    content: '';
    position: absolute;
    top: 0;
    right: -52px; /* Extend 52px to the right, off-screen */
    width: 52px;
    height: 100%;
    background: var(--color-primary); /* Always red for solid connection */
    border: 1px solid var(--color-primary);
    border-left: none;
    border-right: none;
    z-index: -1; /* Behind the main tab */
  }

  .pill-text {
    transform: rotate(-90deg);
    white-space: nowrap;
    font-size: var(--text-xs);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .pill-button:hover {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary-dark, var(--color-primary));
  }

  .pill-button.active {
    background: var(--color-primary);
    color: var(--brand-background);
    transform: translateX(-380px); /* Move exactly sidebar width to align left edges */
    box-shadow: -6px 4px 20px rgba(0, 0, 0, 0.2), -4px 0 16px rgba(230, 57, 97, 0.4), 0 2px 8px rgba(0, 0, 0, 0.1);
    z-index: 1003; /* Always highest, above sidebar */
    transition: transform 0.31s cubic-bezier(0.25, 0.46, 0.45, 0.94), background-color 0s, border-color 0s; /* Transform animation + instant colors */
    border-radius: 12px 0 0 12px; /* Remove right-side rounded corners to attach to sidebar */
    border-right: none; /* Remove right border for seamless connection */
  }

  /* Sidebar slides in from off-screen with the tab */
  .slide-out-card {
    position: fixed;
    top: calc(4rem + 30px); /* Moved up 50px to align with tab positioning */
    right: -380px; /* Hidden off-screen initially */
    width: 380px;
    height: 520px; /* Increase height to accommodate higher position */
    background: var(--brand-background);
    border: 2px solid var(--color-primary); /* Consistent red border */
    border-radius: 16px 0 0 16px;
    border-right: none;
    box-shadow: -12px 4px 32px rgba(0, 0, 0, 0.2), -8px 0 24px rgba(230, 57, 97, 0.15), -4px 0 16px rgba(0, 0, 0, 0.1); /* Enhanced drop shadow with red accent */
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    z-index: 1001; /* Under tabs but above page content */
    opacity: 1; /* Always visible when in view */
    pointer-events: none;
    transition: right 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Smooth glide animation */
  }

  .slide-out-card.open {
    right: 0; /* Slides to screen edge */
    pointer-events: auto;
  }

  .card-content {
    padding: var(--space-lg);
    max-height: 450px;
    overflow-y: auto;
    background: var(--brand-background);
    border-radius: 12px 0 0 12px;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
  }

  .card-content::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }

  /* Global sidebar content styling for brand consistency */
  .card-content {
    color: var(--color-secondary) !important;
  }

  .card-content * {
    color: inherit !important;
  }

  .card-content h3 {
    color: var(--color-primary) !important;
    font-size: var(--text-lg);
    font-weight: 600;
    margin: 0 0 var(--space-md) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: var(--space-sm);
  }

  .card-content .section-title {
    color: var(--color-secondary) !important;
    font-size: var(--text-md);
    font-weight: 500;
    margin: var(--space-lg) 0 var(--space-sm) 0;
    text-transform: uppercase;
    letter-spacing: 0.03em;
  }

  /* Enhanced Sidebar Sections */
  .sidebar-section {
    margin-bottom: var(--space-xl);
  }

  .section-header {
    margin-bottom: var(--space-lg);
    text-align: center;
    border-bottom: 1px solid color-mix(in srgb, var(--color-primary) 20%, transparent);
    padding-bottom: var(--space-md);
  }

  .section-header h3 {
    color: var(--color-primary) !important;
    font-size: var(--text-md) !important;
    font-weight: 600 !important;
    margin: 0 0 var(--space-xs) 0 !important;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border: none !important;
    padding: 0 !important;
  }

  .section-description {
    color: var(--color-secondary) !important;
    font-size: var(--text-xs) !important;
    font-style: italic;
    margin: 0 !important;
    opacity: 0.8;
  }

  .card-content h3 {
    margin: 0 0 var(--space-md) 0;
    font-size: var(--text-sm);
    font-weight: 600;
    color: var(--color-secondary);
  }

  .filter-options {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .filter-option {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs);
    border-radius: var(--radius-sm);
    cursor: pointer;
    transition: background var(--transition-base);
  }

  .filter-option:hover {
    background: var(--color-background);
  }

  .filter-option input[type="checkbox"] {
    margin: 0;
  }

  .filter-option label {
    margin: 0;
    cursor: pointer;
    font-size: var(--text-xs);
    color: var(--color-text-primary);
  }

  @media (max-width: 768px) {
    .slide-out-card {
      top: calc(2.5rem + 30px); /* Moved up 50px to align with tab positioning */
      right: -340px; /* Hidden off-screen on mobile too */
      width: 340px; /* Larger width for mobile */
      height: 480px; /* Taller height for mobile */
    }

    .pill-button.active {
      transform: translateX(-340px); /* Move exactly mobile sidebar width to align left edges */
    }

  }

  @media (max-width: 768px) {
    /* Ensure proper page width on mobile devices including Samsung S24 Ultra */
    html, body {
      overflow-x: hidden !important;
      max-width: 100vw !important;
      width: 100% !important;
    }

    /* Fix main content container width */
    .page-content {
      overflow-x: hidden !important;
      max-width: 100vw !important;
      width: 100% !important;
    }

    /* Fix content wrapper width */
    .main-content-wrapper {
      overflow-x: hidden !important;
      max-width: calc(100vw - 2rem) !important;
      width: calc(100vw - 2rem) !important;
      margin: 0 1rem !important;
    }

    .page-nav-pills {
      top: calc(2.5rem + 110px);
      right: 0;
      gap: 2px;
      /* Force visibility on mobile Chrome browsers including Samsung */
      position: fixed !important;
      z-index: 1001 !important;
      transform: translateZ(0) !important; /* Hardware acceleration for mobile Chrome */
      -webkit-transform: translateZ(0) !important; /* WebKit specific */
    }

    /* Ensure bottom nav visibility on Samsung Chrome */
    .settings-tab {
      position: fixed !important;
      z-index: 999 !important;
      transform: translateZ(0) !important;
      -webkit-transform: translateZ(0) !important;
      right: 0 !important;
    }

    .pill-button {
      width: 38px;
      height: 72px;
      padding: 8px 6px;
    }

    .pill-button::after {
      right: -26px; /* Mobile: smaller extension */
      width: 26px;
    }

    .pill-text {
      font-size: 9px;
    }
  }

  /* Dropdown overlay card */
  .results-dropdown-content {
    position: fixed;
    left: 50%;
    top: var(--dropdown-top, 0px);
    transform: translateX(-50%) translateY(-100%);
    pointer-events: none;
    z-index: 1002;
    width: min(100vw - var(--space-2xl), 1400px);
    background: var(--brand-background);
    border: 2px solid var(--nav-border);
    border-radius: 0 0 var(--radius-xl) var(--radius-xl);
    box-sizing: border-box;
    transition: border-color 0s; /* Instant color changes */
    box-shadow: none;
  }

  .results-dropdown-content.open {
    transform: translateX(-50%) translateY(var(--open-overlap, -14px));
    pointer-events: auto;
    box-shadow: 0 24px 36px -24px rgba(0, 0, 0, 0.18), 0 48px 80px -40px rgba(0, 0, 0, 0.22);
    border-bottom: none;
  }

  .results-dropdown-content.open.closing {
    transform: translateX(-50%) translateY(-100%);
  }

  .results-dropdown-content .attached-tab {
    position: absolute;
    bottom: 0;
    left: var(--attached-tab-left, 50%);
    transform: translate(-50%, calc(100% - 1px));
    z-index: 1;
    pointer-events: auto;
    box-shadow: none;
    filter: drop-shadow(0 8px 12px rgba(0,0,0,0.12));
  }

  /* Responsive styles for attached tabs */
  @media (max-width: 768px) {
    .results-dropdown-content .attached-tab {
      padding: var(--space-xs) var(--space-sm);
      font-size: var(--text-xs);
      gap: var(--space-xs);
    }
    .results-dropdown-content .attached-tab .tab-icon {
      width: 14px;
      height: 14px;
    }
  }

  @media (max-width: 480px) {
    .results-dropdown-content .attached-tab {
      flex-shrink: 0;
      min-width: auto;
      padding: var(--space-xs) var(--space-xs);
      font-size: 0;
      gap: 0;
      justify-content: center;
      text-align: center;
      min-width: 42px;
      height: 36px;
      color: transparent;
    }
    .results-dropdown-content .attached-tab .tab-icon {
      width: 16px;
      height: 16px;
      color: var(--color-secondary);
    }
    .results-dropdown-content .attached-tab:hover .tab-icon,
    .results-dropdown-content .attached-tab.active .tab-icon {
      color: var(--color-white);
    }
  }

  .dropdown-content-wrapper {
    padding: var(--space-xl) var(--space-xl);
    max-height: none;
    overflow: visible;
  }


  .breadcrumb {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--text-sm);
    white-space: nowrap;
  }

  .breadcrumb-link {
    color: var(--color-primary);
    text-decoration: none;
    transition: color var(--transition-base);
  }

  .breadcrumb-link:hover {
    color: var(--color-secondary);
  }

  .breadcrumb-separator {
    color: var(--color-text-secondary);
  }

  .breadcrumb-current {
    color: var(--color-text-primary);
    font-weight: 500;
  }

  /* Title and Navigation Section */
  .title-nav-section {
    background: var(--color-background);
    padding: 0.25rem 0;
  }

  .title-nav-wrapper {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: 2rem;
  }

  .title-breadcrumb {
    flex: 1;
  }

  .display-title {
    font-size: var(--text-2xl);
    font-weight: 300;
    color: var(--color-secondary);
    margin: 0 0 0.25rem 0;
    text-align: left;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  /* Search Bar Styles for White Background Section */
  .search-container {
    max-width: 400px;
    flex: 0 0 auto;
  }

  .search-form {
    position: relative;
  }

  .search-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    background: var(--color-white);
    border: 2px solid color-mix(in srgb, var(--color-primary) 20%, transparent);
    border-radius: 30px;
    padding: 0.75rem 1.25rem;
    transition: background-color 0s, border-color 0s;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .search-input-wrapper:focus-within {
    border-color: var(--color-primary);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .search-icon {
    color: var(--color-text-secondary);
    margin-right: 1rem;
    flex-shrink: 0;
    width: 18px;
    height: 18px;
  }

  .search-input {
    flex: 1;
    border: none;
    background: none;
    font-size: 1rem;
    color: var(--color-text-primary);
    outline: none;
    padding: 0;
  }

  .search-input::placeholder {
    color: var(--color-text-secondary);
  }

  .search-submit {
    background: var(--color-primary);
    border: none;
    color: white;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 1rem;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    flex-shrink: 0;
  }

  .search-submit svg {
    width: 16px;
    height: 16px;
  }

  .search-submit:hover {
    background: var(--color-primary-dark, var(--color-primary));
  }

  /* Content Section */
  .content-section {
    padding: 0.25rem 0;
  }

  

  .entries {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-xl);
    margin-bottom: var(--space-2xl);
  }

  

  .entry-card {
    background: var(--color-background);
    border: 2px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-radius: var(--radius-lg);
    padding: var(--space-xl);
    box-shadow: var(--shadow-sm);
    transition: background-color 0s, border-color 0s;
  }

  .entry-card:hover {
    border-color: color-mix(in srgb, var(--color-primary) 30%, transparent);
  }

  /* Card Header - Category left, Date right */
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-md);
  }

  .card-header .meta-categories,
  .card-header .meta-date {
    display: flex;
    align-items: center;
  }

  .card-header .meta-date {
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
  }

  /* Card Footer - Reading time and tags on separate lines */
  .card-footer {
    margin-top: var(--space-lg);
  }

  .meta-reading-time {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
    margin-bottom: var(--space-lg);
  }

  .meta-reading-time svg {
    fill: currentColor;
    flex-shrink: 0;
  }

  /* Tags Container */
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  /* Category Pill - Solid Red with Cream Font */
  .category-pill {
    display: inline-block;
    background: var(--color-primary);
    border: none;
    border-radius: var(--radius-full);
    padding: var(--space-xs) var(--space-sm);
    font-size: var(--text-xs);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    color: var(--brand-background);
    text-decoration: none;
    transition: background-color 0s, border-color 0s;
  }

  .category-pill:hover {
    background: var(--color-secondary);
    color: var(--brand-background);
  }

  /* Tag Pills - Match Category Style but Outlined */
  .tag-pill {
    display: inline-block;
    background: transparent;
    border: 1px solid var(--color-primary);
    border-radius: var(--radius-full);
    padding: 2px var(--space-xs);
    font-size: 10px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    color: var(--color-primary);
    text-decoration: none;
    transition: background-color 0s, border-color 0s;
  }

  .tag-pill:hover {
    background: var(--color-primary);
    color: var(--brand-background);
  }



  .entry-title {
    margin: 0 0 var(--space-md) 0;
    font-size: var(--text-2xl);
    line-height: var(--leading-tight);
  }

  .entry-title a {
    color: var(--color-secondary);
    text-decoration: none;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: color var(--transition-base);
  }

  .entry-title a:hover {
    color: var(--color-primary);
  }

  .entry-excerpt {
    color: var(--color-text-primary);
    line-height: var(--leading-relaxed);
    margin: 0;
  }

  /* No Results */
  .no-results {
    text-align: center;
    padding: var(--space-3xl) var(--space-lg);
  }

  .no-results h2 {
    color: var(--color-secondary);
    margin: 0 0 var(--space-md) 0;
    font-size: var(--text-2xl);
  }

  .no-results p {
    color: var(--color-text-secondary);
    margin: 0 0 var(--space-lg) 0;
    font-size: var(--text-lg);
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    color: var(--color-primary);
    background: none;
    font-weight: 500;
    padding: var(--space-sm) var(--space-md);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-md);
    transition: background-color 0s, border-color 0s;
    cursor: pointer;
    font-size: inherit;
    font-family: inherit;
  }

  .back-link:hover {
    background: var(--color-primary);
    color: var(--color-white);
  }


  /* Content Sections Styles */
  .content-sections {
    padding: var(--space-xs) 0;
  }

  .content-section {
    margin-bottom: var(--space-xs);
  }

  .content-section:last-child {
    margin-bottom: 0;
  }

  .content-section h3 {
    color: var(--color-secondary);
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    margin: 0 0 var(--space-xs) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .post-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--space-lg);
  }

  .post-card {
    display: block;
    background: var(--color-background);
    border: 2px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-radius: var(--radius-lg);
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: background-color 0s, border-color 0s;
    box-shadow: var(--shadow-sm);
  }

  .post-card:hover {
    border-color: color-mix(in srgb, var(--color-primary) 25%, transparent);
  }

  .post-image {
    position: relative;
    width: 100%;
    height: 180px;
    overflow: hidden;
    background: color-mix(in srgb, var(--color-primary) 5%, transparent);
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity var(--transition-base);
  }

  .post-card:hover .post-image img {
    opacity: 0.9;
  }

  .post-content {
    padding: var(--space-lg);
  }

  .post-content h4 {
    color: var(--color-secondary);
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    margin: 0 0 var(--space-xs) 0;
    line-height: var(--leading-tight);
  }

  .post-content p {
    color: var(--color-text-primary);
    font-size: var(--text-base);
    line-height: var(--leading-relaxed);
    margin: 0 0 var(--space-sm) 0;
  }

  .post-date,
  .post-meta {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .post-date {
    color: var(--color-primary);
  }

  .post-meta {
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    color: var(--color-primary);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-size: var(--text-xs);
    display: inline-block;
  }

  /* Category Buttons and Keyword Tags */
  .category-buttons,
  .keyword-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
    margin-top: var(--space-sm);
  }

  .category-btn {
    padding: var(--space-md) var(--space-lg);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-lg);
    background: var(--brand-background);
    color: var(--color-secondary);
    font-size: var(--text-sm);
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.3;
    text-align: center;
    white-space: normal;
    min-height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.15), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  .keyword-tag {
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--color-primary);
    border-radius: var(--radius-full);
    background: color-mix(in srgb, var(--color-primary) 5%, var(--brand-background));
    color: var(--color-primary);
    font-size: var(--text-xs);
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    box-shadow: 0 1px 4px rgba(230, 57, 97, 0.1);
  }

  .category-btn:hover {
    background: var(--color-primary);
    color: var(--brand-background);
  }

  .keyword-tag:hover {
    background: var(--color-primary);
    color: var(--brand-background);
  }

  .category-btn.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 3px 12px rgba(230, 57, 97, 0.4), 0 1px 6px rgba(0, 0, 0, 0.1);
  }

  .category-btn.active:hover {
    background: var(--color-secondary);
    color: var(--brand-background);
    border-color: var(--color-secondary);
  }

  .keyword-tag {
    font-size: var(--text-xs);
    padding: var(--space-xs) var(--space-sm);
  }

  .keyword-tag.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.3), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  .keyword-tag.active:hover {
    background: var(--color-secondary);
    color: var(--brand-background);
    border-color: var(--color-secondary);
  }

  /* Enhanced Keyword Cloud */
  .keyword-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
    justify-content: center;
    margin-top: var(--space-md);
  }

  .keyword-pill {
    padding: var(--space-xs) var(--space-md);
    border: 1px solid var(--color-primary);
    border-radius: var(--radius-full);
    background: var(--brand-background);
    color: var(--color-secondary);
    font-size: var(--text-xs);
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0s, border-color 0s;
    text-transform: lowercase;
    letter-spacing: 0.02em;
    position: relative;
    text-decoration: none;
  }

  .keyword-pill:hover {
    background: var(--color-primary);
    color: var(--brand-background);
  }

  .keyword-pill.popular {
    font-weight: 600;
    background: color-mix(in srgb, var(--color-primary) 10%, var(--brand-background));
  }

  .keyword-pill.featured {
    border-color: var(--color-secondary);
    color: var(--color-secondary);
    font-weight: 600;
  }

  .keyword-pill.trending {
    animation: subtle-pulse 2s infinite;
  }

  .keyword-pill.active {
    background: var(--color-primary);
    color: var(--brand-background);
    border-color: var(--color-primary);
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.3), 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  @keyframes subtle-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
  }

  /* Enhanced Featured Grid */
  .featured-grid {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    margin-top: var(--space-md);
  }

  .featured-item {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    padding: var(--space-md);
    border: 2px solid var(--color-primary);
    border-radius: var(--radius-lg);
    background: var(--brand-background);
    text-decoration: none;
    color: inherit;
    transition: background-color 0s, border-color 0s;
    box-shadow: 0 2px 8px rgba(230, 57, 97, 0.1);
    position: relative;
    overflow: hidden;
  }

  .featured-item:hover {
    border-color: var(--color-secondary);
  }

  .featured-icon {
    font-size: 1.5rem;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: color-mix(in srgb, var(--color-primary) 10%, var(--brand-background));
    border-radius: var(--radius-md);
    flex-shrink: 0;
  }

  .featured-info {
    flex: 1;
    min-width: 0;
  }

  .featured-info h4 {
    color: var(--color-secondary) !important;
    font-size: var(--text-sm) !important;
    font-weight: 600 !important;
    margin: 0 0 var(--space-xs) 0 !important;
    text-transform: uppercase;
    letter-spacing: 0.03em;
  }

  .featured-badge {
    display: inline-block;
    background: var(--color-primary);
    color: var(--brand-background);
    font-size: var(--text-xs);
    font-weight: 600;
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-full);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .featured-item.popular .featured-badge {
    background: var(--color-secondary);
  }

  .featured-item.trending .featured-icon {
    animation: subtle-pulse 2s infinite;
  }

  /* Default Content */
  .default-content {
    text-align: center;
    padding: var(--space-3xl) var(--space-lg);
    max-width: 600px;
    margin: 0 auto;
  }

  .default-content h3 {
    color: var(--color-secondary);
    font-size: var(--text-2xl);
    font-weight: var(--font-semibold);
    margin: 0 0 var(--space-lg) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .default-content p {
    color: var(--color-text-primary);
    font-size: var(--text-lg);
    line-height: var(--leading-relaxed);
    margin: 0 0 var(--space-md) 0;
  }

  .default-content p:last-child {
    margin-bottom: 0;
  }

  /* Featured Cards - 6 cards on desktop, 1 column on mobile */
  .featured-cards {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: var(--space-sm);
  }

  .featured-card {
    display: block;
    background: var(--color-background);
    border: 2px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-radius: var(--radius-md);
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: background-color 0s, border-color 0s;
    box-shadow: var(--shadow-sm);
  }

  .featured-card:hover {
    border-color: color-mix(in srgb, var(--color-primary) 25%, transparent);
  }

  .featured-content {
    padding: var(--space-md);
    text-align: center;
  }

  .featured-content h4 {
    color: var(--color-secondary) !important;
    font-size: var(--text-xs) !important;
    font-weight: 600 !important;
    margin: 0 0 var(--space-xs) 0;
    line-height: var(--leading-tight);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .featured-meta {
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    color: var(--color-primary);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-size: var(--text-xs);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    display: inline-block;
  }

  /* Results cards now direct to page level */
  @media (max-width: 768px) {
    .page-header h1 {
      letter-spacing: 0.05em;
      white-space: normal !important;
      word-wrap: break-word !important;
      overflow-wrap: break-word !important;
      hyphens: auto !important;
      max-width: calc(100vw - 3rem) !important;
      line-height: 1.1 !important;
    }

    .page-header {
      padding: 2rem 0 1.5rem;
    }

    /* Mobile search and nav layout */
    .search-nav-wrapper {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
    }

    .search-container {
      max-width: 90%;
      margin: 0 auto;
      order: 1;
    }

    .breadcrumb {
      order: 2;
      justify-content: center;
      font-size: 0.875rem;
      flex-wrap: wrap;
    }

    /* Mobile search bar - smaller and thinner */
    .search-input-wrapper {
      padding: 0.5rem 0.875rem; /* Reduced padding */
      border-radius: 20px; /* Smaller radius */
    }

    .search-icon {
      width: 16px; /* Smaller icon */
      height: 16px;
      margin-right: 0.75rem;
    }

    .search-input {
      font-size: 0.875rem; /* Smaller text */
    }

    .search-input::placeholder {
      font-size: 0.875rem;
    }

    .search-submit {
      width: 28px; /* Smaller button */
      height: 28px;
      margin-left: 0.75rem;
    }

    .search-submit svg {
      width: 14px; /* Smaller icon */
      height: 14px;
    }

    .search-nav-section {
      padding: 1.5rem 0; /* Reduced padding */
    }

    /* Mobile - stack layout and center title */
    .title-nav-section {
      padding: 1rem 0;
    }

    .title-nav-wrapper {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .title-breadcrumb {
      text-align: center;
    }

    .display-title {
      text-align: center;
      margin-bottom: 0.5rem;
    }

    .search-container {
      max-width: 90%;
    }

    /* Mobile content sections */
    .content-sections {
      padding: var(--space-xs) 0;
    }

    .content-section {
      margin-bottom: var(--space-xs);
    }

    .content-section h3 {
      font-size: var(--text-lg);
      margin-bottom: var(--space-xs);
    }

    .post-grid {
      grid-template-columns: 1fr;
      gap: var(--space-md);
    }

    .post-image {
      height: 160px;
    }

    .post-content {
      padding: var(--space-md);
    }

    .post-content h4 {
      font-size: var(--text-base);
    }

    .post-content p {
      font-size: var(--text-sm);
    }

    /* Mobile category buttons and keyword tags */
    .category-buttons,
    .keyword-tags {
      gap: var(--space-xs);
    }

    .category-btn {
      font-size: var(--text-xs);
      padding: var(--space-xs) var(--space-sm);
      flex: 1;
      min-width: 0;
      text-align: center;
      line-height: 1.1;
    }

    .keyword-tag {
      font-size: var(--text-xs);
      padding: var(--space-xs) var(--space-xs);
    }

    /* Mobile featured cards - simple text cards */
    .featured-cards {
      grid-template-columns: 1fr;
      gap: var(--space-xs);
    }

    .featured-card {
      border: 1px solid color-mix(in srgb, var(--color-primary) 15%, transparent);
      border-radius: var(--radius-sm);
    }

    .featured-content {
      padding: var(--space-sm);
      text-align: left;
    }

    .featured-content h4 {
      font-size: var(--text-sm);
      margin-bottom: var(--space-xs);
    }

    .featured-meta {
      font-size: 10px;
      padding: 2px var(--space-xs);
    }


    /* Mobile - single column for entries */
    .entries {
      grid-template-columns: 1fr;
    }

  }

  /* Tablet adjustments for tabs */
  @media (max-width: 640px) {
    .results-nav-tab {
      padding: var(--space-xs) var(--space-sm);
      font-size: var(--text-xs);
      gap: var(--space-xs);
    }

    .results-nav-tab .tab-icon {
      width: 14px;
      height: 14px;
    }
  }

  @media (max-width: 480px) {
    .entries {
      padding: 0 var(--space-xl) !important;
      margin: 0 !important;
    }

    .results-nav-tabs {
      display: flex;
      flex-wrap: nowrap;
      justify-content: center;
      gap: var(--space-xs);
      overflow-x: auto;
      padding: 0 var(--space-sm);
      scrollbar-width: none;
      -ms-overflow-style: none;
      width: auto !important;
      min-width: auto !important;
      max-width: none !important;
    }

    .results-nav-tabs::-webkit-scrollbar {
      display: none;
    }

    .results-nav-tab {
      flex-shrink: 0;
      min-width: auto;
      padding: var(--space-xs) var(--space-xs);
      font-size: 0;
      gap: 0;
      justify-content: center;
      text-align: center;
      border-radius: 0 0 var(--radius-md) var(--radius-md);
      min-width: 42px;
      height: 36px;
    }

    .results-nav-tab .tab-icon {
      width: 16px;
      height: 16px;
    }

    .results-nav-tab {
      color: transparent;
    }

    .results-nav-tab .tab-icon {
      color: var(--color-secondary);
    }

    .results-nav-tab:hover .tab-icon,
    .results-nav-tab.active .tab-icon {
      color: var(--color-white);
    }

  }
</style>
