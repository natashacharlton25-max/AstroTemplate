---
import Layout from '@layouts/Layout.astro';
import siteConfig from '@/site.config';

// Sample blog posts data
const posts = [
  {
    id: 1,
    title: "Hello and Welcome to the insights Page",
    excerpt: "It is lovely to meet you here.",
    category: "Uncategorized",
    categorySlug: "uncategorized",
    tags: ["welcome", "introduction", "getting-started"],
    author: "natashacharlton25@googlemail.com",
    authorSlug: "natashacharlton25-googlemail-com",
    date: "2025-04-30T14:08:57+00:00",
    dateFormatted: "April 30, 2025",
    slug: "hello-and-welcome-to-the-insights-page"
  },
  {
    id: 2,
    title: "Natural Strategies for Personal Growth",
    excerpt: "Exploring holistic approaches to self-development and mindful living practices.",
    category: "Personal Growth",
    categorySlug: "personal-growth",
    tags: ["growth", "mindfulness", "holistic", "development"],
    author: "natashacharlton25@googlemail.com",
    authorSlug: "natashacharlton25-googlemail-com",
    date: "2025-04-25T10:15:00+00:00",
    dateFormatted: "April 25, 2025",
    slug: "natural-strategies-personal-growth"
  },
  {
    id: 3,
    title: "Mindful Living in the Digital Age",
    excerpt: "Finding balance and presence while navigating our connected world.",
    category: "Natural Strategies",
    categorySlug: "natural-strategies",
    tags: ["mindfulness", "digital", "balance", "technology"],
    author: "natashacharlton25@googlemail.com",
    authorSlug: "natashacharlton25-googlemail-com",
    date: "2025-04-20T16:30:00+00:00",
    dateFormatted: "April 20, 2025",
    slug: "mindful-living-digital-age"
  }
];
---

<Layout title={`Insights - ${siteConfig.brand.name}`}>
  <main class="site-main hfeed">
    <!-- Page Header with Hanging Tabs -->
    <section class="page-header">
      <div class="page-header-content">
        <h1>Insights & Articles</h1>
      </div>

      <!-- Tabs hanging from header bottom -->
      <div class="header-tabs-container">
        <nav class="insights-nav-tabs" aria-label="Insights navigation">
        <button class="insights-nav-tab" data-tab="categories" aria-label="Categories">
          <svg class="tab-icon" width="16" height="16" viewBox="0 0 24 24" fill="none">
            <path d="M3 7V17C3 18.1046 3.89543 19 5 19H19C20.1046 19 21 18.1046 21 17V7M3 7L12 2L21 7M3 7L12 12L21 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M12 12V19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
          Categories
        </button>
        <button class="insights-nav-tab" data-tab="archive" aria-label="Archive">
          <svg class="tab-icon" width="16" height="16" viewBox="0 0 24 24" fill="none">
            <path d="M3 4V20C3 21.1046 3.89543 22 5 22H19C20.1046 22 21 21.1046 21 20V8L15 2H5C3.89543 2 3 2.89543 3 4Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M14 2V8H20" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M9 13H15" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            <path d="M9 17H13" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
          Archive
        </button>
        <button class="insights-nav-tab" data-tab="tags" aria-label="Tags">
          <svg class="tab-icon" width="16" height="16" viewBox="0 0 24 24" fill="none">
            <path d="M20.59 13.41L13.42 20.58C13.05 20.95 12.55 21.16 12.02 21.16C11.49 21.16 10.99 20.95 10.62 20.58L2 12V2H12L20.59 10.59C20.96 10.96 21.16 11.46 21.16 11.99C21.16 12.52 20.96 13.02 20.59 13.39V13.41Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M7 7H7.01" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Tags
        </button>
        </nav>
      </div>
    </section>

    <!-- Dropdown Content Area (replaces sidebar) -->
    <section class="header-dropdown-content" id="headerDropdownContent">
      <div class="dropdown-content-wrapper">
        <!-- Content will be populated by JavaScript -->
      </div>
    </section>

    <div class="main-content-wrapper content-aligned">
      <div class="ct-container" data-sidebar="right" data-vertical-spacing="top:bottom">
        <section>
          <div class="entries" data-archive="default" data-layout="classic" data-cards="boxed">
            {posts.map(post => (
              <article class="entry-card card-content" data-reveal="yes:1">
                <div class="card-header">
                  <ul class="entry-meta" data-type="icons:circle" data-id="meta_1">
                    <li class="meta-categories" data-type="simple">
                      <svg width="13" height="13" viewBox="0 0 15 15">
                        <path d="M14.4,1.2H0.6C0.3,1.2,0,1.5,0,1.9V5c0,0.3,0.3,0.6,0.6,0.6h0.6v7.5c0,0.3,0.3,0.6,0.6,0.6h11.2c0.3,0,0.6-0.3,0.6-0.6V5.6h0.6C14.7,5.6,15,5.3,15,5V1.9C15,1.5,14.7,1.2,14.4,1.2z M12.5,12.5h-10V5.6h10V12.5z M13.8,4.4H1.2V2.5h12.5V4.4z M5.6,7.5c0-0.3,0.3-0.6,0.6-0.6h2.5c0.3,0,0.6,0.3,0.6,0.6S9.1,8.1,8.8,8.1H6.2C5.9,8.1,5.6,7.8,5.6,7.5z"></path>
                      </svg>
                      <a href={`/results?type=category&value=${encodeURIComponent(post.category)}`} rel="tag" class="ct-term-1">
                        {post.category}
                      </a>
                    </li>
                  </ul>

                  <div class="card-date" itemprop="datePublished">
                    <a href={`/results?type=archive&value=${post.date.substring(0, 7)}`} class="ct-meta-element-date" title="View all posts from this month">
                      <time datetime={post.date}>
                        {post.dateFormatted}
                      </time>
                    </a>
                  </div>
                </div>

                <h2 class="entry-title">
                  <a href={`/${post.slug}/`} rel="bookmark">{post.title}</a>
                </h2>

                <div class="entry-excerpt">
                  <p>{post.excerpt}</p>
                </div>

                <div class="card-tags">
                  {post.tags.map(tag => (
                    <a href={`/results?type=tag&value=${encodeURIComponent(tag)}`} class="tag-pill" title={`View all posts tagged with ${tag}`}>{tag}</a>
                  ))}
                </div>
              </article>
            ))}
          </div>
        </section>
      </div>

      <!-- Right Sidebar Widgets -->
      <aside class="blog-sidebar" id="blogSidebar">
        <div class="sidebar-overlay" id="sidebarOverlay"></div>
        <div class="sidebar-content">
          <div class="sidebar-header">
            <h3 class="sidebar-title" id="sidebarTitle">Categories</h3>
            <button class="sidebar-close" id="sidebarClose" aria-label="Close sidebar">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
          </div>

          <div class="sidebar-body">
            <!-- Categories Widget -->
            <div class="widget categories-widget" id="categoriesWidget">
              <ul class="category-list">
                <li class="category-item">
                  <a href="/results?type=category&value=Personal Growth" class="category-link">
                    <span class="category-name">Personal Growth</span>
                    <span class="category-count">(2)</span>
                  </a>
                </li>
                <li class="category-item">
                  <a href="/results?type=category&value=Natural Strategies" class="category-link">
                    <span class="category-name">Natural Strategies</span>
                    <span class="category-count">(1)</span>
                  </a>
                </li>
                <li class="category-item">
                  <a href="/results?type=category&value=Uncategorized" class="category-link">
                    <span class="category-name">Uncategorized</span>
                    <span class="category-count">(1)</span>
                  </a>
                </li>
              </ul>
            </div>

            <!-- Archive Widget -->
            <div class="widget archive-widget" id="archiveWidget" style="display: none;">
              <ul class="archive-list">
                <li class="archive-item">
                  <a href="/results?type=archive&value=2025-04" class="archive-link">
                    <span class="archive-period">April 2025</span>
                    <span class="archive-count">(3)</span>
                  </a>
                </li>
                <li class="archive-item">
                  <a href="/results?type=archive&value=2025-03" class="archive-link">
                    <span class="archive-period">March 2025</span>
                    <span class="archive-count">(0)</span>
                  </a>
                </li>
                <li class="archive-item">
                  <a href="/results?type=archive&value=2025-02" class="archive-link">
                    <span class="archive-period">February 2025</span>
                    <span class="archive-count">(0)</span>
                  </a>
                </li>
                <li class="archive-item">
                  <a href="/results?type=archive&value=2025-01" class="archive-link">
                    <span class="archive-period">January 2025</span>
                    <span class="archive-count">(0)</span>
                  </a>
                </li>
              </ul>
            </div>

            <!-- Tags Widget -->
            <div class="widget tags-widget" id="tagsWidget" style="display: none;">
              <div class="tag-cloud">
                <a href="/results?type=tag&value=mindfulness" class="tag-link tag-size-large">mindfulness</a>
                <a href="/results?type=tag&value=personal growth" class="tag-link tag-size-medium">personal growth</a>
                <a href="/results?type=tag&value=natural strategies" class="tag-link tag-size-medium">natural strategies</a>
                <a href="/results?type=tag&value=wellness" class="tag-link tag-size-small">wellness</a>
                <a href="/results?type=tag&value=meditation" class="tag-link tag-size-small">meditation</a>
                <a href="/results?type=tag&value=lifestyle" class="tag-link tag-size-large">lifestyle</a>
                <a href="/results?type=tag&value=digital detox" class="tag-link tag-size-small">digital detox</a>
                <a href="/results?type=tag&value=self care" class="tag-link tag-size-medium">self care</a>
                <a href="/results?type=tag&value=balance" class="tag-link tag-size-small">balance</a>
                <a href="/results?type=tag&value=productivity" class="tag-link tag-size-small">productivity</a>
                <a href="/results?type=tag&value=habits" class="tag-link tag-size-medium">habits</a>
                <a href="/results?type=tag&value=inspiration" class="tag-link tag-size-small">inspiration</a>
              </div>
            </div>
          </div>
        </div>
      </aside>
    </div>
  </main>
</Layout>

<style>
  .site-main {
    min-height: 100vh;
  }

  /* Hero Header Section */
  .hero-header {
    background: var(--color-background);
    border-bottom: 1px solid color-mix(in srgb, var(--color-primary) 15%, transparent);
    padding: var(--space-2xl) 0;
  }

  .hero-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-lg);
  }

  .hero-content {
    text-align: center;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    color: var(--color-secondary);
    margin: 0 0 var(--space-lg) 0;
    line-height: var(--leading-tight);
    font-weight: 700;
  }

  .hero-description {
    font-size: var(--text-lg);
    color: var(--color-text-primary);
    line-height: var(--leading-relaxed);
    max-width: 600px;
    margin: 0 auto;
  }

  /* Insights Page Header Override */
  .page-header {
    overflow: visible !important; /* Allow tabs to hang outside */
    padding-bottom: 3rem !important; /* Add space for the tabs */
  }

  /* Navigation Tabs Section */
  .nav-tabs-section {
    background: var(--color-background);
    border-bottom: 1px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    padding: var(--space-lg) 0;
  }

  .nav-tabs-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-lg);
    display: flex;
    justify-content: center;
  }

  /* Header tabs container - positioned to hang from red header */
  .header-tabs-container {
    position: absolute;
    top: 100%; /* Position at the very bottom of the red header */
    left: 50%;
    transform: translateX(-50%);
    z-index: 999; /* Lower than header to appear underneath */
    /* Remove background - tabs should appear to hang from header */
  }

  .insights-nav-tabs {
    display: flex;
    gap: 4px;
    align-items: flex-end;
  }

  /* Physical tab styling - cream-filled hanging tabs */
  .insights-nav-tab {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-sm) var(--space-lg);
    background: var(--brand-background); /* brand cream */
    border: 2px solid var(--nav-border);
    border-top: none; /* No top border for hanging tab effect */
    border-radius: 0 0 var(--radius-md) var(--radius-md); /* Flat top, rounded bottom */
    color: var(--color-secondary); /* Using a dark color for readability */
    font-weight: 500;
    font-size: var(--text-sm);
    cursor: pointer;
    transition: background-color 0.25s ease, color 0.25s ease, box-shadow 0.25s ease;
    position: relative;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    white-space: nowrap;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .insights-nav-tab:hover {
    background: var(--color-primary); /* solid red */
    color: var(--color-white);
    box-shadow: none; /* no glow */
  }

  /* Combined active state */
  .insights-nav-tab.active {
    background: var(--color-primary);
    color: var(--color-white);
    border-color: var(--color-primary);
    z-index: 1051; /* Above other tabs when active */
  }

  /* Dropdown card overlay with glide-down animation */
  .header-dropdown-content {
    position: fixed;
    left: 50%;
    top: var(--dropdown-top, 0px); /* anchored to bottom of header */
    /* closed: bottom flush with header bottom for smooth return */
    transform: translateX(-50%) translateY(-100%);
    pointer-events: none;
    z-index: 1002; /* below header but above content */
    width: min(100% - var(--space-2xl), 1200px);
    background: var(--brand-background);
    border: 2px solid var(--nav-border);
    border-radius: 0 0 var(--radius-xl) var(--radius-xl); /* square top corners */
    /* No drop shadow when closed (hidden under header) */
    box-shadow: none;
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    transition: transform 800ms cubic-bezier(0.22, 1, 0.36, 1), box-shadow 800ms ease;
  }

  .header-dropdown-content.open {
    /* open: still slightly hidden under header */
    transform: translateX(-50%) translateY(var(--open-overlap, -14px));
    /* Medium drop shadow while open, offset away from join line */
    box-shadow: 0 24px 36px -24px rgba(0, 0, 0, 0.18), 0 48px 80px -40px rgba(0, 0, 0, 0.22);
    border-bottom: none; /* avoid seam at the tab join */
    pointer-events: auto;
  }

  /* Keep .open styles (including shadow) during the glide-up; only change transform */
  .header-dropdown-content.open.closing {
    transform: translateX(-50%) translateY(-100%);
  }

  /* Closing uses reverse glide; no special intermediate state */

  /* Real tab attached to the card bottom edge (keeps original x position) */
  .header-dropdown-content .attached-tab {
    position: absolute;
    bottom: 0; /* anchor to card bottom */
    left: var(--attached-tab-left, 50%); /* pixel center relative to card */
    transform: translate(-50%, calc(100% - 1px)); /* hang below, slight 1px overlap to hide seam */
    z-index: 1;
    pointer-events: auto; /* keep it interactive while open */
    /* Use downward-only drop shadow; no line at join */
    box-shadow: none;
    filter: drop-shadow(0 8px 12px rgba(0,0,0,0.12));
    transition: filter 800ms ease;
  }

  /* Ensure attached tab stays cream while open */
  .header-dropdown-content .attached-tab,
  .header-dropdown-content.open .attached-tab,
  .header-dropdown-content.open .attached-tab.active {
    background: var(--brand-background) !important;
    color: var(--color-secondary) !important;
    border-color: var(--nav-border) !important;
  }

  /* Hide original clicked tab to simulate movement */
  .insights-nav-tab.is-hidden { visibility: hidden; }

  .dropdown-content-wrapper {
    /* larger top padding so content does not crowd under header */
    padding: var(--space-3xl) var(--space-xl) var(--space-xl);
    max-height: 400px;
    overflow-y: auto;
  }

  .insights-nav-tab.active:hover {
    background: var(--color-primary);
    color: var(--color-white);
  }

  .tab-icon {
    flex-shrink: 0;
  }

  /* Main Content Wrapper */
  .main-content-wrapper {
    position: relative;
  }

  .ct-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: var(--space-2xl) var(--space-lg);
  }

  /* Right Sidebar */
  .blog-sidebar {
    position: fixed;
    top: var(--space-xl);
    right: -400px;
    bottom: var(--space-xl);
    width: 400px;
    height: calc(100vh - var(--space-3xl));
    background: var(--color-white);
    border-left: 2px solid color-mix(in srgb, var(--color-primary) 15%, transparent);
    border-radius: var(--radius-xl) 0 0 var(--radius-xl);
    box-shadow: -4px 0 20px color-mix(in srgb, var(--color-black) 15%, transparent);
    transition: right var(--transition-base);
    z-index: 1000;
    overflow-y: auto;
  }

  .blog-sidebar.active {
    right: 0;
  }

  .sidebar-overlay {
    display: none;
  }

  .sidebar-content {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .sidebar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-lg) var(--space-xl);
    border-bottom: 1px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    background: var(--color-background);
  }

  .sidebar-title {
    margin: 0;
    color: var(--color-secondary);
    font-size: var(--text-xl);
    font-weight: 600;
  }

  .sidebar-close {
    background: none;
    border: none;
    color: var(--color-text-primary);
    cursor: pointer;
    padding: var(--space-xs);
    border-radius: var(--radius-sm);
    transition: all var(--transition-base);
  }

  .sidebar-close:hover {
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    color: var(--color-primary);
  }

  .sidebar-body {
    flex: 1;
    padding: var(--space-xl);
    overflow-y: auto;
  }

  /* Widget Styles */
  .widget {
    margin-bottom: var(--space-xl);
  }

  /* Categories Widget */
  .category-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .category-item {
    margin-bottom: var(--space-sm);
  }

  .category-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-sm) var(--space-md);
    text-decoration: none;
    color: var(--color-text-primary);
    border-radius: var(--radius-md);
    transition: all var(--transition-base);
    border: 1px solid transparent;
  }

  .category-link:hover {
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .category-name {
    font-weight: 500;
  }

  .category-count {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
  }

  /* Archive Widget */
  .archive-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .archive-item {
    margin-bottom: var(--space-sm);
  }

  .archive-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-sm) var(--space-md);
    text-decoration: none;
    color: var(--color-text-primary);
    border-radius: var(--radius-md);
    transition: all var(--transition-base);
    border: 1px solid transparent;
  }

  .archive-link:hover {
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .archive-period {
    font-weight: 500;
  }

  .archive-count {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
  }

  /* Tags Widget */
  .tag-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  .tag-link {
    display: inline-block;
    padding: var(--space-xs) var(--space-sm);
    background: color-mix(in srgb, var(--color-primary) 10%, transparent);
    color: var(--color-primary);
    text-decoration: none;
    border-radius: var(--radius-full);
    transition: all var(--transition-base);
    font-size: var(--text-sm);
    border: 1px solid transparent;
  }

  .tag-link:hover {
    background: var(--color-primary);
    color: var(--color-white);
    border-color: var(--color-primary);
    transform: translateY(-1px);
  }

  .tag-link.tag-size-large {
    font-size: var(--text-base);
    font-weight: 500;
  }

  .tag-link.tag-size-medium {
    font-size: var(--text-sm);
    font-weight: 500;
  }

  .tag-link.tag-size-small {
    font-size: var(--text-xs);
  }

  .entries {
    display: grid;
    gap: var(--space-xl);
  }

  .entry-card {
    background: var(--color-background);
    border: 2px solid color-mix(in srgb, var(--color-primary) 10%, transparent);
    border-radius: var(--radius-lg);
    padding: var(--space-xl);
    box-shadow: var(--shadow-sm);
    transition: all var(--transition-base);
  }

  .entry-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    border-color: color-mix(in srgb, var(--color-primary) 30%, transparent);
  }

  .entry-meta {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    gap: var(--space-md);
    align-items: center;
  }

  .entry-meta[data-id="meta_1"] {
    margin-bottom: var(--space-md);
  }

  .entry-meta[data-id="meta_2"] {
    margin-top: var(--space-lg);
  }

  .entry-meta li {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
  }

  .entry-meta svg {
    fill: currentColor;
    flex-shrink: 0;
  }

  /* Category Styling with Uppercase */
  .meta-categories a {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: var(--font-semibold);
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: var(--text-xs);
  }

  .meta-categories a:hover {
    color: var(--color-secondary);
  }

  .entry-title {
    margin: 0 0 var(--space-md) 0;
    font-size: var(--text-xl);
    line-height: var(--leading-tight);
  }

  .entry-title a {
    color: var(--color-heading);
    text-decoration: none;
    transition: color var(--transition-base);
  }

  .entry-title a:hover {
    color: var(--color-primary);
  }

  .entry-excerpt {
    margin: 0;
  }

  .entry-excerpt p {
    color: var(--color-text-primary);
    line-height: var(--leading-relaxed);
    margin: 0;
  }

  /* Card Header Layout */
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
    position: relative;
  }

  /* Date in Top Right Corner */
  .card-date {
    flex-shrink: 0;
    margin-left: 1rem;
  }

  .ct-meta-element-date {
    color: var(--color-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.8px;
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    white-space: nowrap;
  }

  /* Tag Pills Styling */
  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .tag-pill {
    display: inline-block;
    background: var(--color-primary);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.625rem;
    font-weight: var(--font-medium);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    transition: background-color 0.2s ease;
  }

  .tag-pill:hover {
    background: var(--color-primary-dark, var(--color-primary));
    transform: translateY(-1px);
  }

  /* Adjust meta spacing */
  .entry-meta {
    margin-bottom: 0;
  }

  /* Responsive Design */
  @media (min-width: 768px) {
    .entries {
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }
  }

  @media (max-width: 767px) {
    .hero-header {
      padding: var(--space-xl) 0;
    }

    .hero-container {
      padding: 0 var(--space-md);
    }

    .nav-tabs-container {
      padding: 0 var(--space-md);
    }

    .ct-container {
      padding: var(--space-lg) var(--space-md);
    }

    .entry-meta {
      flex-wrap: wrap;
      gap: var(--space-sm);
    }

    .insights-nav-tab {
      padding: var(--space-sm);
      font-size: var(--text-xs);
    }
  }

  @media (max-width: 480px) {
    .insights-nav-tabs {
      display: flex;
      flex-wrap: nowrap;
      justify-content: center;
      gap: var(--space-xs);
      overflow-x: auto;
      padding: 0 var(--space-sm);
      scrollbar-width: none;
      -ms-overflow-style: none;
    }

    .insights-nav-tabs::-webkit-scrollbar {
      display: none;
    }

    .insights-nav-tab {
      flex-shrink: 0;
      min-width: auto;
      padding: var(--space-xs) var(--space-xs);
      font-size: 0;
      gap: 0;
      justify-content: center;
      text-align: center;
      border-radius: 0 0 var(--radius-md) var(--radius-md);
      min-width: 42px;
      height: 36px;
      color: transparent;
    }

    .insights-nav-tab .tab-icon {
      width: 16px;
      height: 16px;
      color: var(--color-secondary);
    }

    .insights-nav-tab:hover .tab-icon,
    .insights-nav-tab.active .tab-icon {
      color: var(--color-white);
    }

    .blog-sidebar {
      width: calc(100vw - var(--space-lg));
      right: calc(-100vw + var(--space-lg));
      top: var(--space-lg);
      bottom: var(--space-lg);
      height: calc(100vh - var(--space-xl));
    }

    .sidebar-header {
      padding: var(--space-md);
    }

    .sidebar-body {
      padding: var(--space-md);
    }
  }

  /* Mobile adjustments - More specific override for insights */
  @media (max-width: 768px) {
    main .main-content-wrapper.content-aligned {
      margin-left: 1.75rem !important; /* Simple left margin for insights */
      margin-right: 1.75rem !important; /* Simple right margin for insights */
      padding-left: 0 !important;
      padding-right: 0 !important;
      max-width: calc(100vw - 3.5rem) !important;
    }
  }
</style>

<script>
  // Insights navigation is now handled by unified navigation system
  // No need for separate registration

  // Header dropdown functionality
  document.addEventListener('DOMContentLoaded', () => {
    const navTabs = document.querySelectorAll('.insights-nav-tab');
    const dropdown = document.getElementById('headerDropdownContent');
    const dropdownWrapper = document.querySelector('.dropdown-content-wrapper');
    const closeBtn = document.getElementById('sidebarClose');
    const sidebarTitle = document.getElementById('sidebarTitle');
    const pageHeader = document.querySelector('.page-header');
    const tabsRow = document.querySelector('.insights-nav-tabs');

    // Widget elements
    const categoriesWidget = document.getElementById('categoriesWidget');
    const archiveWidget = document.getElementById('archiveWidget');
    const tagsWidget = document.getElementById('tagsWidget');

    // Widget titles
    const widgetTitles = {
      'categories': 'Categories',
      'archive': 'Archive',
      'tags': 'Tags'
    };

    // Compute overlay top to stick under header
    function positionOverlay() {
      if (!dropdown || !pageHeader) return;
      const rect = pageHeader.getBoundingClientRect();
      dropdown.style.setProperty('--dropdown-top', `${rect.bottom}px`);
    }

    // Move the REAL tab into the overlay and restore after close
    const tabHomes = new WeakMap();
    let currentAttachedTab = null;
    let tabsRowLocked = false;

    function lockTabsRow() {
      if (!tabsRow || tabsRowLocked) return;
      const rect = tabsRow.getBoundingClientRect();
      const widthPx = Math.round(rect.width * 2) / 2; // snap to 0.5px
      tabsRow.style.width = `${widthPx}px`;
      tabsRow.style.minWidth = `${widthPx}px`;
      tabsRow.style.maxWidth = `${widthPx}px`;
      tabsRowLocked = true;
    }

    function unlockTabsRow() {
      if (!tabsRow || !tabsRowLocked) return;
      tabsRow.style.removeProperty('width');
      tabsRow.style.removeProperty('min-width');
      tabsRow.style.removeProperty('max-width');
      tabsRowLocked = false;
    }

    function attachRealTab(tabEl) {
      if (!dropdown || !tabEl) return;
      const tab = tabEl;
      if (currentAttachedTab && currentAttachedTab !== tab) {
        restoreRealTab(currentAttachedTab);
      }
      if (currentAttachedTab === tab) return;

      // Create placeholder to preserve layout in header
      const rect = tab.getBoundingClientRect();
      const phW = Math.round(rect.width);
      const phH = Math.round(rect.height);
      const placeholder = document.createElement('span');
      placeholder.className = 'tab-placeholder';
      placeholder.style.display = 'inline-flex';
      placeholder.style.width = `${phW}px`;
      placeholder.style.height = `${phH}px`;
      placeholder.style.flex = `0 0 ${phW}px`;

      const parent = tab.parentNode;
      const nextSibling = tab.nextSibling;
      tabHomes.set(tab, { parent, nextSibling, placeholder, widthPx: phW });
      parent.insertBefore(placeholder, tab);

      // Move tab into overlay
      dropdown.appendChild(tab);
      tab.classList.add('attached-tab');
      tab.style.pointerEvents = 'auto';

      // Lock tab width while attached to avoid width-based reflow jitter later
      tab.style.width = `${phW}px`;
      tab.style.flex = `0 0 ${phW}px`;

      updateAttachedTabPosition(tab);
      currentAttachedTab = tab;
    }

    function updateAttachedTabPosition(tabEl) {
      const tab = tabEl || currentAttachedTab;
      if (!dropdown || !tab) return;
      const home = tabHomes.get(tab);
      if (!home) return;
      try {
        const ddRect = dropdown.getBoundingClientRect();
        const phRect = home.placeholder.getBoundingClientRect();
        // Quantize to integer CSS pixels to avoid sub-pixel jitter
        const left = Math.round(phRect.left - ddRect.left + phRect.width / 2);
        dropdown.style.setProperty('--attached-tab-left', `${left}px`);
      } catch {}
    }

    function restoreRealTab(tabEl) {
      const tab = tabEl || currentAttachedTab;
      if (!tab) return;
      const home = tabHomes.get(tab);
      if (!home) return;
      // Temporarily disable transitions to avoid a "click" snap when restoring
      const prevTransition = tab.style.transition;
      tab.style.transition = 'none';
      tab.classList.remove('attached-tab');
      tab.style.removeProperty('pointer-events');
      const { parent, nextSibling, placeholder, widthPx } = home;
      // Keep width locked during the swap back into header
      tab.style.width = `${widthPx}px`;
      tab.style.flex = `0 0 ${widthPx}px`;
      parent.insertBefore(tab, nextSibling);
      // Remove placeholder and release width lock on the following frames
      requestAnimationFrame(() => {
        placeholder.remove();
        requestAnimationFrame(() => {
          tab.style.removeProperty('width');
          tab.style.removeProperty('flex');
        });
      });
      // Re-enable transitions on the next frame
      requestAnimationFrame(() => {
        tab.style.transition = prevTransition || '';
      });
      tabHomes.delete(tab);
      if (currentAttachedTab === tab) currentAttachedTab = null;
    }

    // Close overlay: slow glide up (reverse of open). Restore tab after animation.
    let isClosing = false;
    function closeOverlay() {
      if (!dropdown || !dropdown.classList.contains('open') || isClosing) return;
      isClosing = true;
      // Ensure final alignment before starting the glide-up
      updateAttachedTabPosition();
      positionOverlay();
      dropdown.classList.add('closing');
      const finalize = () => {
        if (currentAttachedTab) restoreRealTab(currentAttachedTab);
        navTabs.forEach(t => t.classList.remove('active'));
        isClosing = false;
        dropdown.classList.remove('closing');
        dropdown.classList.remove('open');
        unlockTabsRow();
      };
      const onDone = (ev) => {
        // Only react to the dropdown's transform transition end
        if (ev && ev.target !== dropdown) return;
        if (ev && ev.propertyName && ev.propertyName !== 'transform') return;
        dropdown.removeEventListener('transitionend', onDone);
        clearTimeout(closeTimeout);
        finalize();
      };
      dropdown.addEventListener('transitionend', onDone);
      // Fallback in case transitionend doesn't fire (edge cases)
      const closeTimeout = setTimeout(finalize, 1200);
    }

    // Toggle dropdown with glide animation
    function toggleDropdown(widgetType) {
      if (!dropdown) return;
      const clickedTab = document.querySelector(`[data-tab="${widgetType}"]`);
      const isOpen = dropdown.classList.contains('open');
      const isSame = clickedTab ? clickedTab.classList.contains('active') : false;

      // If already open and same tab -> close
      if (isOpen && isSame) {
        closeOverlay();
        return;
      }

      // Switch active
      navTabs.forEach(t => t.classList.remove('active'));
      if (clickedTab) clickedTab.classList.add('active');

      // Populate and position
      showDropdownContent(widgetType);
      positionOverlay();
      // Move the actual clicked tab into the overlay and align
      attachRealTab(clickedTab);
      // Freeze row width to prevent lateral nudge while animating
      lockTabsRow();
      // Open
      dropdown.classList.add('open');
    }

    // Show dropdown content
    function showDropdownContent(widgetType) {
      // Hide all widgets
      if (categoriesWidget) categoriesWidget.style.display = 'none';
      if (archiveWidget) archiveWidget.style.display = 'none';
      if (tagsWidget) tagsWidget.style.display = 'none';

      // Show selected widget in dropdown
      let widgetToShow;
      switch(widgetType) {
        case 'categories':
          widgetToShow = categoriesWidget;
          break;
        case 'archive':
          widgetToShow = archiveWidget;
          break;
        case 'tags':
          widgetToShow = tagsWidget;
          break;
      }

      if (widgetToShow) {
        // Move widget content into dropdown
        if (dropdownWrapper) {
          dropdownWrapper.innerHTML = '';
          dropdownWrapper.appendChild(widgetToShow.cloneNode(true));
          const widgetElement = dropdownWrapper.querySelector('.widget');
          if (widgetElement) {
            widgetElement.style.display = 'block';
          }
        }
      }
    }

    // Event listeners for tabs
    navTabs.forEach(tab => {
      tab.addEventListener('click', (e) => {
        e.preventDefault();
        const tabType = tab.getAttribute('data-tab');
        if (tabType) {
          toggleDropdown(tabType);
        }
      });
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      const tgt = e.target;
      const inside = (tgt instanceof Element) && (tgt.closest('.header-tabs-container') || tgt.closest('.header-dropdown-content'));
      if (!inside) {
        if (!dropdown) return;
        // Smooth staged close
        if (dropdown.classList.contains('open')) closeOverlay();
      }
    });

    // Keep overlay positioned on scroll/resize
    window.addEventListener('resize', () => { positionOverlay(); if (!isClosing) updateAttachedTabPosition(); });
    window.addEventListener('scroll', () => { positionOverlay(); if (!isClosing) updateAttachedTabPosition(); }, { passive: true });
    // Initial position
    positionOverlay();
  });
</script>
