---
// Unified Mega Menu Component for both TabNav and BottomNav
---

<div class="mega-menu-overlay" id="megaMenuOverlay">
  <div class="mega-menu-container" id="megaMenuContainer">
    <div class="mega-menu-content" id="megaMenuContent">
      <!-- Content will be dynamically inserted here -->
    </div>
  </div>
</div>

<style>
  .mega-menu-overlay {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    z-index: 998 !important;
    opacity: 0 !important;
    visibility: hidden !important;
    background: transparent !important;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                visibility 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
    pointer-events: none !important;
  }

  .mega-menu-overlay.show {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    background: color-mix(in srgb, var(--brand-background) 10%, transparent) !important;
  }

  .mega-menu-container {
    position: absolute !important;
    top: -100% !important;
    left: 140px !important; /* Account for TabNav width */
    right: 100px !important; /* Account for BottomNav width */
    max-height: calc(100vh - 120px) !important;
    min-height: 200px !important;
    background: var(--brand-background) !important;
    border: 1px solid color-mix(in srgb, var(--brand-secondary) 15%, transparent) !important;
    border-radius: 0 0 32px 32px !important;
    border-top: none !important;
    box-shadow: 0 8px 32px color-mix(in srgb, var(--brand-secondary) 12%, transparent) !important;
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
    overflow: hidden !important;
  }

  .mega-menu-overlay.show .mega-menu-container {
    top: 0 !important;
  }

  .mega-menu-content {
    padding: 40px !important;
    height: 100% !important;
    overflow-y: auto !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
    transition: opacity 0.15s ease-in-out !important;
  }

  .mega-menu-content::-webkit-scrollbar {
    display: none !important;
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .mega-menu-container {
      left: 120px !important; /* Extra space from left TabNav */
      right: 40px !important; /* Less space on right, can extend further */
      border-radius: 0 0 24px 24px !important;
    }
    
    .mega-menu-content {
      padding: 20px !important;
      font-size: 0.875rem !important; /* Smaller text on mobile */
    }

    .mega-menu-content h2 {
      font-size: 1.5rem !important; /* Smaller main heading */
      margin-bottom: 1.5rem !important;
    }

    .mega-menu-content h3 {
      font-size: 1.125rem !important; /* Smaller section headings */
      margin-bottom: 0.75rem !important;
    }

    .mega-menu-content p {
      font-size: 0.875rem !important; /* Smaller paragraph text */
      line-height: 1.4 !important;
    }
  }

  /* Mega Menu Aesthetic Styling - v2.1 IMAGE SIZE FIX */
  .mega-menu-wrapper {
    max-width: 100% !important;
    width: 100% !important;
    margin: 0 auto !important;
    display: block !important;
  }

  .mega-menu-header {
    text-align: center;
    margin-bottom: 2.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid color-mix(in srgb, var(--brand-secondary) 10%, transparent);
  }

  .mega-menu-title {
    color: var(--brand-secondary) !important;
    font-size: 2.5rem !important;
    font-weight: 700 !important;
    margin-bottom: 0.75rem !important;
    line-height: 1.2 !important;
  }

  .mega-menu-subtitle {
    color: var(--brand-text) !important;
    font-size: 1.125rem !important;
    margin: 0 !important;
    opacity: 0.8;
  }

  .mega-menu-grid {
    display: grid !important;
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 2.5rem !important;
    align-items: start !important;
    width: 100% !important;
  }

  .mega-menu-column {
    background: color-mix(in srgb, var(--brand-background) 60%, transparent) !important;
    border: 1px solid color-mix(in srgb, var(--brand-secondary) 8%, transparent) !important;
    border-radius: 16px !important;
    padding: 1.5rem !important;
    width: 100% !important;
    min-width: 0 !important;
    box-sizing: border-box !important;
  }

  .mega-column-title {
    color: var(--brand-primary) !important;
    font-size: 1.125rem !important;
    font-weight: 600 !important;
    margin-bottom: 1.25rem !important;
    padding-bottom: 0.75rem !important;
    border-bottom: 1px solid color-mix(in srgb, var(--brand-primary) 15%, transparent) !important;
  }

  .mega-menu-items {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .mega-menu-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.875rem;
    background: var(--brand-background);
    border: 1px solid color-mix(in srgb, var(--brand-secondary) 6%, transparent);
    border-radius: 12px;
    text-decoration: none !important;
    transition: all 0.2s ease;
    color: var(--brand-text) !important;
  }

  .mega-menu-item:hover {
    background: var(--brand-primary) !important;
    color: var(--brand-text-light) !important;
    transform: translateX(4px);
    border-color: var(--brand-primary);
  }

  .mega-menu-item img,
  .mega-menu-wrapper .mega-menu-item img,
  .mega-menu-content .mega-menu-item img {
    width: 48px !important;
    height: 48px !important;
    object-fit: cover !important;
    border-radius: 8px !important;
    flex-shrink: 0 !important;
    min-width: 48px !important;
    max-width: 48px !important;
    min-height: 48px !important;
    max-height: 48px !important;
    display: block !important;
  }

  .mega-item-content {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .mega-item-title {
    font-weight: 600;
    font-size: 0.95rem;
    line-height: 1.3;
  }

  .mega-item-desc {
    font-size: 0.8rem;
    opacity: 0.75;
    line-height: 1.2;
  }

  /* Mobile responsive adjustments */
  @media (max-width: 768px) {
    .mega-menu-title {
      font-size: 2rem !important;
    }

    .mega-menu-subtitle {
      font-size: 1rem !important;
    }

    .mega-menu-grid {
      grid-template-columns: 1fr !important;
      gap: 1.5rem !important;
    }

    .mega-menu-column {
      padding: 1.25rem;
    }

    .mega-menu-item {
      padding: 0.75rem;
    }

    .mega-menu-item img {
      width: 40px !important;
      height: 40px !important;
      min-width: 40px !important;
      max-width: 40px !important;
      min-height: 40px !important;
      max-height: 40px !important;
    }

    .mega-column-title {
      font-size: 1rem !important;
    }

    .mega-item-title {
      font-size: 0.9rem;
    }

    .mega-item-desc {
      font-size: 0.75rem;
    }
  }

  /* Tablet adjustments */
  @media (min-width: 769px) and (max-width: 1024px) {
    .mega-menu-grid {
      grid-template-columns: repeat(2, 1fr) !important;
      gap: 2rem !important;
    }

    .mega-menu-column:nth-child(3) {
      grid-column: 1 / -1;
    }
  }

  /* Small tablet adjustments */
  @media (min-width: 600px) and (max-width: 768px) {
    .mega-menu-grid {
      grid-template-columns: repeat(2, 1fr) !important;
      gap: 1.75rem !important;
    }

    .mega-menu-column:nth-child(3) {
      grid-column: 1 / -1;
    }
  }

  /* Tablet adjustments */
  @media (min-width: 769px) and (max-width: 1024px) {
    .mega-menu-container {
      left: 130px !important; /* More space from TabNav */
      right: 80px !important; /* Less space on right */
    }
    
    .mega-menu-content {
      padding: 32px !important;
    }
  }
</style>

<script>
  // Unified MegaMenu functionality
  class MegaMenu {
    private overlay: HTMLElement | null = null;
    private container: HTMLElement | null = null;
    private content: HTMLElement | null = null;
    private isOpen: boolean = false;
    private currentSource: string = '';
    public currentLabel: string = '';
    private mobileTimeout: ReturnType<typeof setTimeout> | null = null;

    constructor() {
      this.overlay = document.getElementById('megaMenuOverlay');
      this.container = document.getElementById('megaMenuContainer');
      this.content = document.getElementById('megaMenuContent');
      this.init();
    }

    private init() {
      // Close on overlay click
      this.overlay?.addEventListener('click', (e) => {
        if (e.target === this.overlay) {
          this.close();
        }
      });

      // Close on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isOpen) {
          this.close();
        }
      });

      // Prevent closing when hovering over mega menu content (desktop only)
      this.container?.addEventListener('mouseenter', () => {
        document.dispatchEvent(new CustomEvent('megamenu:hover:enter'));
      });

      this.container?.addEventListener('mouseleave', () => {
        document.dispatchEvent(new CustomEvent('megamenu:hover:leave'));
      });

      // Mobile scroll detection - close mega menu on scroll
      let lastScrollY = window.scrollY;
      window.addEventListener('scroll', () => {
        if (this.isMobile() && this.isOpen && Math.abs(window.scrollY - lastScrollY) > 10) {
          this.close();
        }
        lastScrollY = window.scrollY;
      }, { passive: true });

      // Listen for hamburger close events
      document.addEventListener('tabnav:hamburger:closed', () => {
        if (this.isMobile() && this.isOpen) {
          this.close();
        }
      });
    }

    private isMobile(): boolean {
      return window.innerWidth <= 768;
    }

    open(content: string, source: 'tabnav' | 'bottomnav' = 'tabnav') {
      if (!this.content || !this.overlay) return;

      this.currentSource = source;
      
      // Clear any existing mobile timeout
      if (this.mobileTimeout) {
        clearTimeout(this.mobileTimeout);
        this.mobileTimeout = null;
      }
      
      if (this.isOpen) {
        // If already open, just switch content smoothly
        this.content.style.opacity = '0';
        setTimeout(() => {
          if (this.content) {
            this.content.innerHTML = content;
            this.content.style.opacity = '1';
          }
        }, 150);
      } else {
        // If closed, open with new content
        this.content.innerHTML = content;
        this.overlay.classList.add('show');
        this.isOpen = true;
      }

      // Set mobile auto-close timer (5 seconds)
      if (this.isMobile()) {
        this.mobileTimeout = setTimeout(() => {
          this.close();
        }, 5000);
      }

      // Emit custom event for other components to listen
      document.dispatchEvent(new CustomEvent('megamenu:opened', { 
        detail: { source } 
      }));
    }

    close() {
      if (!this.overlay) return;

      // Clear mobile timeout
      if (this.mobileTimeout) {
        clearTimeout(this.mobileTimeout);
        this.mobileTimeout = null;
      }

      this.overlay.classList.remove('show');
      this.isOpen = false;
      this.currentSource = '';
      this.currentLabel = '';

      // Clear content after transition
      setTimeout(() => {
        if (this.content) {
          this.content.innerHTML = '';
          this.content.style.opacity = '1'; // Reset opacity
        }
      }, 300);

      // Emit custom event for other components to listen
      document.dispatchEvent(new CustomEvent('megamenu:closed'));
    }

    isOpenFor(source: string): boolean {
      return this.isOpen && this.currentSource === source;
    }

    getIsOpen(): boolean {
      return this.isOpen;
    }
  }

  // Create global instance
  if (typeof window !== 'undefined') {
    (window as any).megaMenu = new MegaMenu();
  }
</script>