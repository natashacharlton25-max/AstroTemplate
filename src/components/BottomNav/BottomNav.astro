---
// Bottom Navigation Component
import ContactPopup from './contact-form/Contact-Popup.astro';
import SearchPopup from '../Search/SearchPopup.astro';
---

<!-- Settings Tab -->
<div class="settings-tab" data-settings-tab>
  <!-- Expanded Settings Menu -->
  <div class="settings-expanded" data-settings-expanded>
    <!-- Contact -->
    <button class="settings-item" data-action="contact" aria-label="Contact">
      <svg class="settings-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
      </svg>
    </button>
    
    <!-- Home -->
    <button class="settings-item" data-action="home" aria-label="Home">
      <svg class="settings-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
      </svg>
    </button>
    
    <!-- Scroll to Top -->
    <button class="settings-item" data-action="scroll-top" aria-label="Scroll to top">
      <svg class="settings-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>
    
    <!-- Search -->
    <button class="settings-item" data-action="search" aria-label="Search">
      <svg class="settings-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <circle cx="11" cy="11" r="8"></circle>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m21 21-4.35-4.35"></path>
      </svg>
    </button>
    
    <!-- Dark Mode Toggle -->
    <button class="settings-item" data-action="dark-mode" aria-label="Toggle Dark Mode" id="bottomNavDarkMode">
      <svg class="settings-icon moon-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z"/>
      </svg>
      <svg class="settings-icon sun-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="display: none;">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
      </svg>
    </button>
    
    <!-- Accessibility -->
    <button class="settings-item" data-action="accessibility" aria-label="Accessibility Options">
      <i class="settings-icon fas fa-universal-access"></i>
    </button>
    
  </div>
  
  <!-- Plus Icon Tab -->
  <button class="settings-toggle" data-settings-toggle aria-label="Navigation Menu">
    <svg class="settings-plus" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
    </svg>
  </button>
</div>

<!-- Contact Popup -->
<ContactPopup />

<!-- Search Popup -->
<SearchPopup />

<!-- FontAwesome CDN for accessibility icon -->
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
  integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
/>

<style>
  @import './navigation/settingsNavStyles.css';
  @import './overlays/overlayStyles.css';
  
  /* Style FontAwesome icon to match SVG icons */
  .settings-icon.fas {
    font-size: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>

<script>
  import { initBottomNav } from './navigation/bottomNavInit.js';
  import { scrollNavManager } from '../utils/scrollNavigation.js';
  
  // Initialize bottom nav
  initBottomNav();
  
  // Initialize scroll-aware behavior
  document.addEventListener('DOMContentLoaded', () => {
    const settingsTab = document.querySelector('.settings-tab');
    const settingsToggle = document.querySelector('[data-settings-toggle]');
    
    if (settingsTab) {
      // Register the bottom nav element for scroll-aware behavior
      scrollNavManager.registerNavElement(settingsTab, {
        hideOnScrollDown: true,
        showOnScrollUp: true,
        onHide: () => {
          // Close expanded menu when hiding due to scroll
          if (settingsTab.classList.contains('active')) {
            settingsToggle?.click();
          }
        },
        onShow: () => {
          console.log('Bottom navigation shown on scroll up');
        }
      });
      
      // Prevent hiding when nav is manually opened
      settingsToggle?.addEventListener('click', () => {
        const isActive = settingsTab.classList.contains('active');
        
        if (!isActive) {
          // Nav is opening - pause scroll hiding and force visible
          scrollNavManager.pauseScrollHiding(3000);
          settingsTab.classList.add('nav-force-visible');
        } else {
          // Nav is closing - remove force visible
          settingsTab.classList.remove('nav-force-visible');
        }
      });
      
      // Remove force visible when clicking outside expanded menu
      document.addEventListener('click', (e) => {
        const expandedMenu = document.querySelector('.settings-expanded');
        if (expandedMenu && !settingsTab.contains(e.target) && settingsTab.classList.contains('active')) {
          settingsTab.classList.remove('nav-force-visible');
        }
      });
      
      // Keep nav visible when hovering over it
      settingsTab.addEventListener('mouseenter', () => {
        settingsTab.classList.add('nav-force-visible');
      });
      
      settingsTab.addEventListener('mouseleave', () => {
        if (!settingsTab.classList.contains('active')) {
          settingsTab.classList.remove('nav-force-visible');
        }
      });
    }
  });
</script>
