---
// InfoCard.astro - Reusable info card component with pills/tags
export interface Props {
  imageUrl: string;
  imageAlt?: string;
  tag: string;
  title: string;
  description: string;
  pills?: string[];
  prevUrl?: string;
  nextUrl?: string;
  readMoreUrl?: string;
  downloadUrl?: string;
  copyUrl?: string;
  shareUrl?: string;
  className?: string;
}

const {
  imageUrl,
  imageAlt = "Info Image",
  tag,
  title,
  description,
  pills = [],
  prevUrl,
  nextUrl,
  readMoreUrl,
  downloadUrl,
  copyUrl,
  shareUrl,
  className = ""
} = Astro.props;
---

<div class={`info-card ${className}`}>
  <div class="card-image">
    <img src={imageUrl} alt={imageAlt} />
  </div>
  <div class="card-content">
    <div class="card-text">
      <div class="tag">{tag}</div>
      <h2 class="title">{title}</h2>
      <p class="description">{description}</p>
    </div>

    <!-- Pills Section -->
    {pills.length > 0 && (
      <div class="blue-pills">
        {pills.map(pill => (
          <span class="blue-pill">{pill}</span>
        ))}
      </div>
    )}

    <!-- Desktop Actions -->
    <div class="action-group-desktop">
      {prevUrl && (
        <button class="button-circle prev-btn" data-url={prevUrl} title="Previous Section">
          <i class="fas fa-chevron-left"></i>
        </button>
      )}
      {readMoreUrl && (
        <a href={readMoreUrl} class="button-circle" target="_blank" title="Read More">
          <i class="fas fa-plus"></i>
        </a>
      )}
      {nextUrl && (
        <button class="button-circle next-btn" data-url={nextUrl} title="Next Section">
          <i class="fas fa-chevron-right"></i>
        </button>
      )}
      {downloadUrl && (
        <a href={downloadUrl} class="button-circle" target="_blank" title="Download" download>
          <i class="fas fa-download"></i>
        </a>
      )}
      {copyUrl && (
        <button class="button-circle copy-btn" data-url={copyUrl} title="Copy Link">
          <i class="fas fa-link"></i>
        </button>
      )}
      {shareUrl && (
        <div class="share-container">
          <button class="button-circle share-btn" title="Share">
            <i class="fas fa-share-alt"></i>
          </button>
          <div class="share-options">
            <a class="button-circle"
               href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`}
               target="_blank"
               title="Share on Facebook">
              <i class="fab fa-facebook-f"></i>
            </a>
            <a class="button-circle"
               href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(shareUrl)}`}
               target="_blank"
               title="Share on Twitter">
              <i class="fab fa-twitter"></i>
            </a>
            <a class="button-circle"
               href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(shareUrl)}`}
               target="_blank"
               title="Share on LinkedIn">
              <i class="fab fa-linkedin-in"></i>
            </a>
            <a class="button-circle"
               href={`https://api.whatsapp.com/send?text=${encodeURIComponent(shareUrl)}`}
               target="_blank"
               title="Share on WhatsApp">
              <i class="fab fa-whatsapp"></i>
            </a>
          </div>
        </div>
      )}
    </div>

    <!-- Mobile Actions -->
    <div class="action-group-mobile">
      {prevUrl && (
        <button class="button-circle prev-btn-mobile" data-url={prevUrl} title="Previous Section">
          <i class="fas fa-chevron-left"></i>
        </button>
      )}
      {readMoreUrl && (
        <a href={readMoreUrl} class="button-circle" target="_blank" title="Read More">
          <i class="fas fa-plus"></i>
        </a>
      )}
      {nextUrl && (
        <button class="button-circle next-btn-mobile" data-url={nextUrl} title="Next Section">
          <i class="fas fa-chevron-right"></i>
        </button>
      )}
      {downloadUrl && (
        <a href={downloadUrl} class="button-circle" target="_blank" title="Download" download>
          <i class="fas fa-download"></i>
        </a>
      )}
      {copyUrl && (
        <button class="button-circle copy-btn-mobile" data-url={copyUrl} title="Copy Link">
          <i class="fas fa-link"></i>
        </button>
      )}
    </div>
  </div>
</div>

<style>
  .info-card {
    background: rgba(255,255,255,0.18);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-lg);
    backdrop-filter: blur(6px);
    border: 1px solid rgba(255,255,255,0.25);
    width: 100%;
    max-width: 1200px;
    min-height: 350px;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    overflow: hidden;
    position: relative;
    transition: box-shadow var(--transition-base);
  }

  .info-card:hover {
    box-shadow: var(--shadow-xl);
  }

  .card-image {
    width: 380px;
    min-width: 220px;
    background: var(--color-background);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-lg) 0 0 var(--radius-lg);
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--radius-lg) 0 0 var(--radius-lg);
    display: block;
  }

  .card-content {
    flex: 1 1 0%;
    padding: 45px 45px 40px 40px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    text-align: left;
    align-items: flex-start;
  }

  .card-text {
    flex: 1;
  }

  .tag {
    background-color: var(--color-primary);
    color: var(--color-white);
    padding: 6px 14px;
    border-radius: var(--radius-sm);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    text-transform: uppercase;
    display: inline-block;
    margin-bottom: 25px;
    letter-spacing: 1px;
  }

  .title {
    margin: 0 0 16px 0;
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: var(--font-medium);
    color: var(--color-secondary);
    text-transform: uppercase;
    letter-spacing: 0.01em;
    line-height: var(--leading-tight);
  }

  .description {
    margin: 0 0 32px 0;
    font-size: var(--text-lg);
    color: var(--color-text-primary);
    line-height: var(--leading-relaxed);
    font-weight: var(--font-light);
    letter-spacing: 0.01em;
    white-space: pre-line;
  }

  .blue-pills {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-bottom: var(--space-lg);
  }

  .blue-pill {
    display: inline-block;
    padding: 2px 14px;
    border: 2px solid var(--color-secondary);
    color: var(--color-secondary);
    background: color-mix(in srgb, var(--color-secondary) 3%, transparent);
    border-radius: 999px;
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    letter-spacing: 0.1em;
    text-transform: uppercase;
    box-shadow: var(--shadow-xs);
    transition: all var(--transition-fast);
    user-select: none;
    cursor: default;
  }

  .blue-pill:hover {
    background: var(--color-secondary);
    color: var(--color-white);
  }

  .action-group-desktop,
  .action-group-mobile {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: var(--space-md);
    margin-top: var(--space-lg);
    flex-wrap: nowrap;
  }

  .action-group-mobile {
    display: none;
  }

  .button-circle {
    width: 40px;
    height: 40px;
    min-width: 40px;
    min-height: 40px;
    font-size: var(--text-lg);
    color: var(--color-secondary);
    background: rgba(255,255,255,0.15);
    border: none;
    border-radius: 50%;
    backdrop-filter: blur(10px);
    box-shadow: var(--shadow-md);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    text-decoration: none;
    overflow: hidden;
    transition: all var(--transition-base);
  }

  .button-circle:hover {
    background: var(--color-primary);
    color: var(--color-white);
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
  }

  .share-container {
    position: relative;
  }

  .share-options {
    position: absolute;
    top: 50%;
    left: calc(100% + 16px);
    transform: translateY(-50%);
    display: flex;
    gap: var(--space-md);
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--transition-base);
    z-index: 3;
  }

  .share-options.visible {
    opacity: 1;
    pointer-events: auto;
  }

  /* Mobile Styles */
  @media (max-width: 768px) {
    .info-card {
      flex-direction: column;
      width: 100%;
      min-width: unset;
      box-shadow: var(--shadow-md);
      align-items: center;
    }

    .card-image,
    .card-image img {
      border-radius: var(--radius-lg) var(--radius-lg) 0 0;
      width: 100%;
      min-width: unset;
      height: 200px;
    }

    .card-content {
      padding: var(--space-lg) var(--space-md) var(--space-md);
      align-items: center;
      text-align: center;
    }

    .tag {
      margin-bottom: var(--space-md);
      font-size: var(--text-xs);
    }

    .title {
      font-size: clamp(1.5rem, 6vw, 2rem) !important;
      margin-bottom: var(--space-sm);
    }

    .description {
      font-size: var(--text-sm);
      margin-bottom: var(--space-lg);
    }

    .blue-pills {
      gap: var(--space-xs);
      margin-bottom: var(--space-md);
      justify-content: center;
    }

    .blue-pill {
      font-size: 0.69em;
      padding: 2px 10px;
    }

    .action-group-desktop {
      display: none !important;
    }

    .action-group-mobile {
      display: flex !important;
      flex-direction: row;
      justify-content: center !important;
      align-items: center;
      gap: var(--space-sm);
      width: 100%;
      margin-top: var(--space-md);
    }

    .action-group-mobile .button-circle {
      width: 36px !important;
      height: 36px !important;
      min-width: 36px;
      min-height: 36px;
      font-size: var(--text-sm) !important;
    }
  }
</style>

<script>
  // Handle navigation buttons
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement | null;

    if (target?.closest('.prev-btn, .prev-btn-mobile')) {
      const btn = target.closest('.prev-btn, .prev-btn-mobile') as HTMLElement;
      const url = btn?.dataset.url;
      if (url) window.location.href = url;
    }

    if (target?.closest('.next-btn, .next-btn-mobile')) {
      const btn = target.closest('.next-btn, .next-btn-mobile') as HTMLElement;
      const url = btn?.dataset.url;
      if (url) window.location.href = url;
    }
  });

  // Handle copy link buttons
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement | null;
    if (target?.closest('.copy-btn, .copy-btn-mobile')) {
      const btn = target.closest('.copy-btn, .copy-btn-mobile') as HTMLElement;
      const url = btn?.dataset.url;
      if (url) {
        navigator.clipboard.writeText(url)
          .then(() => {
            console.log('Link copied to clipboard');
          })
          .catch(() => {
            const textArea = document.createElement('textarea');
            textArea.value = url;
            document.body.appendChild(textArea);
            textArea.select();
            document.body.removeChild(textArea);
          });
      }
    }
  });

  // Handle share button hover
  document.addEventListener('mouseenter', (e) => {
    const target = e.target as HTMLElement | null;
    if (target?.closest('.share-btn')) {
      const shareContainer = target.closest('.share-container') as HTMLElement;
      const shareOptions = shareContainer?.querySelector('.share-options') as HTMLElement;
      if (shareOptions) {
        shareOptions.classList.add('visible');
      }
    }
  }, true);

  document.addEventListener('mouseleave', (e) => {
    const target = e.target as HTMLElement | null;
    if (target?.closest('.share-container')) {
      const shareContainer = target.closest('.share-container') as HTMLElement;
      const shareOptions = shareContainer?.querySelector('.share-options') as HTMLElement;
      if (shareOptions) {
        setTimeout(() => {
          const isHoveringOptions = shareOptions.matches && shareOptions.matches(':hover');
          const isHoveringBtn = shareContainer.querySelector('.share-btn:hover');
          if (!isHoveringOptions && !isHoveringBtn) {
            shareOptions.classList.remove('visible');
          }
        }, 300);
      }
    }
  }, true);
</script>