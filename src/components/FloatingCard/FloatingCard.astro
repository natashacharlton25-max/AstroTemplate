---
// Sliding tab system for navigation previews
---

<div class="sliding-tab-container" id="slidingTabContainer">
  <div class="sliding-tab" id="slidingTab">
    <div class="tab-label" id="tabLabel">Projects</div>
    <div class="connection-bar" id="connectionBar"></div>
    <div class="tab-card" id="tabCard">
      <div class="tab-card-content" id="tabCardContent">
        <!-- Content will be inserted here -->
      </div>
    </div>
  </div>
</div>

<style>
  .sliding-tab-container {
    position: fixed !important;
    top: 15% !important;
    left: -100vw !important; /* Hidden fully off screen */
    z-index: 996 !important; /* Below TabNav z-index */
    transition: left 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
    pointer-events: auto !important;
    height: 70vh !important; /* 70% screen height as requested */
    width: 100vw !important; /* Full viewport width */
  }

  .sliding-tab-container.show {
    left: 0 !important; /* Slide card to cover full screen */
  }

  .sliding-tab {
    display: flex !important;
    align-items: stretch !important;
    height: 100% !important;
    max-width: 100vw !important;
  }

  .tab-label {
    display: none !important; /* Hide separate tab label - TabNav item acts as the tab */
  }

  .connection-bar {
    position: absolute !important;
    top: 48px !important; /* Position it where the card's top border is */
    left: -200px !important; /* Extend from card back to nav area */
    width: 200px !important; /* Bridge the gap */
    height: 48px !important; /* Match nav item height */
    background: var(--brand-primary) !important;
    border: 1px solid color-mix(in srgb, var(--brand-primary) 80%, transparent) !important;
    border-right: none !important; /* Connect seamlessly to card */
    border-radius: 28px 0 0 0 !important; /* Rounded top-left corner to match nav style */
    box-shadow: -4px 0 8px color-mix(in srgb, var(--brand-primary) 20%, transparent) !important;
    opacity: 0 !important;
    transform: scaleX(0) !important;
    transform-origin: right !important; /* Animate from right to left */
    transition: opacity 0.3s ease 0.2s, transform 0.5s ease 0.2s !important; /* Appear after container shows */
    z-index: 995 !important; /* Below nav items but visible */
  }

  .sliding-tab-container.show .connection-bar {
    opacity: 1 !important;
    transform: scaleX(1) !important;
  }

  .tab-card {
    background: var(--brand-background) !important;
    border: 1px solid color-mix(in srgb, var(--brand-secondary) 15%, transparent) !important;
    border-top-left-radius: 0 !important; /* Remove top-left radius to connect with bar */
    border-radius: 0 16px 16px 16px !important; /* Round other corners */
    width: 320px !important; /* Fixed width for simplicity */
    height: 100% !important; /* Full 70vh height */
    backdrop-filter: blur(12px) !important;
    -webkit-backdrop-filter: blur(12px) !important;
    box-shadow: 4px 0 16px color-mix(in srgb, var(--brand-secondary) 12%, transparent) !important;
    overflow: hidden !important;
    opacity: 0 !important;
    transform: translateX(-30px) !important;
    transition: opacity 0.4s ease 0.3s, transform 0.4s ease 0.3s !important; /* Delay after connection bar */
    margin-left: 200px !important; /* Simple fixed position */
    margin-top: 0 !important;
    /* Add top border that matches the connection bar */
    border-top: 48px solid var(--brand-primary) !important;
  }

  .sliding-tab-container.show .tab-card {
    opacity: 1 !important;
    transform: translateX(0) !important;
  }

  .tab-card-content {
    padding: 20px !important;
    height: 100% !important;
    overflow-y: auto !important;
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
  }

  .tab-card-content::-webkit-scrollbar {
    display: none !important;
  }

  /* Card content styling */
  .card-title {
    color: var(--brand-secondary) !important;
    font-size: 1.125rem !important;
    font-weight: 600 !important;
    margin-bottom: 6px !important;
  }

  .card-description {
    color: var(--brand-text) !important;
    font-size: 0.8rem !important;
    margin-bottom: 16px !important;
    opacity: 0.8 !important;
    line-height: 1.4 !important;
  }

  .card-links {
    display: flex !important;
    flex-direction: column !important;
    gap: 6px !important;
  }

  .card-link {
    display: flex !important;
    align-items: center !important;
    gap: 10px !important;
    padding: 10px !important;
    background: color-mix(in srgb, var(--brand-background) 60%, transparent) !important;
    border: 1px solid color-mix(in srgb, var(--brand-secondary) 8%, transparent) !important;
    border-radius: 8px !important;
    text-decoration: none !important;
    color: var(--brand-text) !important;
    transition: all 0.2s ease !important;
    font-size: 0.8rem !important;
  }

  .card-link:hover {
    background: var(--brand-primary) !important;
    color: var(--brand-text-light) !important;
    border-color: var(--brand-primary) !important;
    transform: translateX(2px) !important;
  }

  .card-link-icon {
    font-size: 14px !important;
    flex-shrink: 0 !important;
    opacity: 0.8 !important;
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .sliding-tab-container {
      top: 10% !important;
      height: 60vh !important;
    }

    .connection-bar {
      top: 40px !important; /* Position at mobile card's top border */
      left: -140px !important; /* Bridge gap to mobile nav position */
      width: 140px !important;
      height: 40px !important; /* Match mobile nav height */
    }

    .tab-card {
      width: 280px !important;
      margin-left: 140px !important;
      border-top: 40px solid var(--brand-primary) !important; /* Match mobile connection bar height */
    }

    .tab-label {
      padding: 10px 16px !important;
      font-size: 12px !important;
      height: 40px !important;
      top: -40px !important;
    }

    .card-title {
      font-size: 1rem !important;
    }

    .card-link {
      padding: 8px !important;
      font-size: 0.75rem !important;
    }
  }

  /* Tablet adjustments */
  @media (min-width: 769px) and (max-width: 1024px) {    
    .connection-bar {
      left: -180px !important; /* Bridge gap to tablet nav position */
      width: 180px !important;
    }

    .tab-card {
      width: 300px !important;
      margin-left: 180px !important;
    }
  }
</style>

<script>
  class SlidingTab {
    private container: HTMLElement | null = null;
    private tabLabel: HTMLElement | null = null;
    private tabCard: HTMLElement | null = null;
    private content: HTMLElement | null = null;
    private isOpen: boolean = false;
    private closeTimeout: ReturnType<typeof setTimeout> | null = null;
    private currentLabel: string = '';

    constructor() {
      this.container = document.getElementById('slidingTabContainer');
      this.tabLabel = document.getElementById('tabLabel');
      this.tabCard = document.getElementById('tabCard');
      this.content = document.getElementById('tabCardContent');
      this.init();
    }

    private init() {
      // Close on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isOpen) {
          this.hide();
        }
      });

      // Keep tab open when hovering over it
      this.container?.addEventListener('mouseenter', () => {
        if (this.closeTimeout) {
          clearTimeout(this.closeTimeout);
          this.closeTimeout = null;
        }
      });

      this.container?.addEventListener('mouseleave', () => {
        this.scheduleHide(500);
      });

      // Click to toggle
      this.tabLabel?.addEventListener('click', () => {
        if (this.isOpen) {
          this.hide();
        } else {
          // If not open, show with current label content
          const content = this.getContentForLabel(this.currentLabel);
          if (content) {
            this.show(content, this.currentLabel);
          }
        }
      });
    }

    private getContentForLabel(label: string): string {
      const contentMap: Record<string, string> = {
        'Projects': `
          <div class="card-title">Our Projects</div>
          <div class="card-description">Explore our latest work and creative solutions</div>
          <div class="card-links">
            <a href="/projects/enterprise" class="card-link">
              <span class="card-link-icon">ðŸ’¼</span>
              Enterprise Solutions
            </a>
            <a href="/projects/ecommerce" class="card-link">
              <span class="card-link-icon">ðŸ›’</span>
              E-commerce Platforms  
            </a>
            <a href="/projects/creative" class="card-link">
              <span class="card-link-icon">ðŸŽ¨</span>
              Creative Portfolios
            </a>
          </div>
        `,
        'Resources': `
          <div class="card-title">Resources</div>
          <div class="card-description">Tools and guides to help you succeed</div>
          <div class="card-links">
            <a href="/resources/api" class="card-link">
              <span class="card-link-icon">ðŸ“š</span>
              API Documentation
            </a>
            <a href="/resources/guides" class="card-link">
              <span class="card-link-icon">ðŸ“–</span>
              Developer Guides
            </a>
            <a href="/resources/templates" class="card-link">
              <span class="card-link-icon">ðŸ“‹</span>
              Code Templates
            </a>
          </div>
        `,
        'Luna': `
          <div class="card-title">Luna Platform</div>
          <div class="card-description">AI-powered tools for modern businesses</div>
          <div class="card-links">
            <a href="/luna/ai" class="card-link">
              <span class="card-link-icon">ðŸ¤–</span>
              AI Assistant
            </a>
            <a href="/luna/analytics" class="card-link">
              <span class="card-link-icon">ðŸ“Š</span>
              Smart Analytics
            </a>
            <a href="/luna/workflow" class="card-link">
              <span class="card-link-icon">âš¡</span>
              Workflow Builder
            </a>
          </div>
        `
      };
      return contentMap[label] || '';
    }

    show(content: string, label: string) {
      if (!this.content || !this.container) return;

      // Set content
      this.content.innerHTML = content;

      // Show the sliding tab
      this.container.classList.add('show');
      this.isOpen = true;

      // Clear any pending hide
      if (this.closeTimeout) {
        clearTimeout(this.closeTimeout);
        this.closeTimeout = null;
      }
    }

    hide() {
      if (!this.container) return;

      // Remove slide-out class from nav links
      const slideOutLinks = document.querySelectorAll('.nav-link.slide-out');
      slideOutLinks.forEach(link => link.classList.remove('slide-out'));

      this.container.classList.remove('show');
      this.isOpen = false;

      // Clear content after transition
      setTimeout(() => {
        if (this.content) {
          this.content.innerHTML = '';
        }
      }, 600);

      if (this.closeTimeout) {
        clearTimeout(this.closeTimeout);
        this.closeTimeout = null;
      }
    }

    scheduleHide(delay: number = 300) {
      if (this.closeTimeout) {
        clearTimeout(this.closeTimeout);
      }
      this.closeTimeout = setTimeout(() => {
        this.hide();
      }, delay);
    }

    isVisible(): boolean {
      return this.isOpen;
    }
  }

  // Create global instance
  if (typeof window !== 'undefined') {
    (window as any).slidingTab = new SlidingTab();
  }
</script>