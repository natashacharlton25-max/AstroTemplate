class v{constructor(){this.topNav={element:null,toggle:null,expanded:null,state:"collapsed",hoverTimer:null,autoHideTimer:null},this.bottomNav={element:null,toggle:null,expanded:null,state:"collapsed",hoverTimer:null,autoHideTimer:null},this.scrollState={lastScrollY:window.scrollY,isScrollingDown:!1,scrollThreshold:20,hideTimeout:null},this.init()}init(){document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>this.initializeSystem()):this.initializeSystem()}initializeSystem(t=0){if(this.findElements(),!this.topNav.element&&!this.bottomNav.element)if(t<5){console.warn(`⚠️ No navigation elements found, retrying (${t+1}/5)...`),setTimeout(()=>this.initializeSystem(t+1),200);return}else{console.error("❌ Failed to find navigation elements after 5 retries");return}this.setupScrollListener(),this.setupTopNavHandlers(),this.setupBottomNavHandlers(),this.setupGlobalHandlers(),this.setupStaggeredAnimations(),this.showNav("top"),this.showNav("bottom"),console.log("🚀 Unified Navigation System initialized successfully"),console.log(`📍 Found elements: top=${!!this.topNav.element}, bottom=${!!this.bottomNav.element}`)}findElements(){this.topNav.element=document.querySelector("#navTab")||document.querySelector(".nav-tab"),this.topNav.toggle=document.querySelector("#navToggle")||this.topNav.element?.querySelector(".nav-toggle"),this.topNav.expanded=document.querySelector("#navExpanded")||this.topNav.element?.querySelector(".nav-expanded"),this.bottomNav.element=document.querySelector(".settings-tab")||document.querySelector("[data-settings-tab]"),this.bottomNav.toggle=this.bottomNav.element?.querySelector("[data-settings-toggle]")||this.bottomNav.element?.querySelector(".settings-toggle"),this.bottomNav.expanded=this.bottomNav.element?.querySelector("[data-settings-expanded]")||this.bottomNav.element?.querySelector(".settings-expanded"),console.log("📍 Elements found:",{topNav:!!this.topNav.element,bottomNav:!!this.bottomNav.element})}setupScrollListener(){let t=!1;window.addEventListener("scroll",()=>{t||(requestAnimationFrame(()=>{this.handleScroll(),t=!1}),t=!0)},{passive:!0})}handleScroll(){const t=window.scrollY,e=Math.abs(t-this.scrollState.lastScrollY);if(e<3)return;const o=this.scrollState.isScrollingDown;this.scrollState.isScrollingDown=t>this.scrollState.lastScrollY;const a=o!==this.scrollState.isScrollingDown,s=e>20;(a||s)&&(console.log(`📜 Scroll: ${this.scrollState.isScrollingDown?"DOWN ⬇️":"UP ⬆️"} (delta: ${e}px)`),this.scrollState.isScrollingDown&&t>this.scrollState.scrollThreshold?this.hideOnScrollDown():this.scrollState.isScrollingDown||this.showOnScrollUp()),this.scrollState.lastScrollY=t}hideOnScrollDown(){this.topNav.state!=="pinned"?(console.log("📜⬇️ Hiding top nav on scroll down"),this.hideNav("top"),this.collapseNav("top")):console.log("📌 Top nav is pinned - staying visible"),this.bottomNav.state!=="pinned"?(console.log("📜⬇️ Hiding bottom nav on scroll down"),this.hideNav("bottom"),this.collapseNav("bottom")):console.log("📌 Bottom nav is pinned - staying visible")}showOnScrollUp(){console.log("📜⬆️ Showing navs on scroll up"),this.showNav("top"),this.showNav("bottom")}setupTopNavHandlers(){!this.topNav.element||!this.topNav.toggle||(this.topNav.toggle.addEventListener("click",t=>{t.stopPropagation(),this.handleTopNavClick()}),this.topNav.element.addEventListener("mouseenter",()=>{this.handleTopNavHoverEnter()}),this.topNav.element.addEventListener("mouseleave",()=>{this.handleTopNavHoverLeave()}))}setupBottomNavHandlers(){!this.bottomNav.element||!this.bottomNav.toggle||(this.bottomNav.toggle.addEventListener("click",t=>{t.stopPropagation(),this.handleBottomNavClick()}),this.bottomNav.element.addEventListener("mouseenter",()=>{this.handleBottomNavHoverEnter()}),this.bottomNav.element.addEventListener("mouseleave",()=>{this.handleBottomNavHoverLeave()}))}setupGlobalHandlers(){document.addEventListener("click",t=>{this.topNav.state==="pinned"&&!this.topNav.element?.contains(t.target)&&(console.log("👆 Clicked outside - unpinning top nav"),this.unpinNav("top")),this.bottomNav.state==="pinned"&&!this.bottomNav.element?.contains(t.target)&&(console.log("👆 Clicked outside - unpinning bottom nav"),this.unpinNav("bottom"))})}setupStaggeredAnimations(){if(this.topNav.expanded){const t=this.topNav.expanded.querySelectorAll(".nav-item")||[];this.setupStaggeredTimings(t,"top")}if(this.bottomNav.expanded){const t=this.bottomNav.expanded.querySelectorAll(".settings-item")||[];this.setupStaggeredTimings(t,"bottom")}this.injectStaggeredStyles()}setupStaggeredTimings(t,e){if(t.length===0)return;const o=120;t.forEach((a,s)=>{const l=a,d=(s+1)*o,c=(t.length-s)*o;l.style.setProperty("--entrance-delay",`${d}ms`),l.style.setProperty("--exit-delay",`${c}ms`)}),console.log(`🎭 Setup staggered animations for ${e} nav: ${t.length} items`)}injectStaggeredStyles(){if(document.getElementById("staggered-nav-styles"))return;const t=document.createElement("style");t.id="staggered-nav-styles",t.textContent=`
      .nav-expanded.show .nav-item,
      .settings-expanded.show .settings-item {
        transition-delay: var(--entrance-delay) !important;
      }
      .nav-expanded.exiting .nav-item,
      .settings-expanded.exiting .settings-item {
        transition-delay: var(--exit-delay) !important;
      }
    `,document.head.appendChild(t),console.log("🎭 Injected staggered animation styles")}handleTopNavClick(){switch(console.log(`🔄 Top nav click - current state: ${this.topNav.state}`),this.topNav.state){case"collapsed":this.expandNav("top");break;case"expanded":this.pinNav("top");break;case"pinned":this.unpinNav("top");break}}handleTopNavHoverEnter(){this.topNav.state==="collapsed"&&(console.log("🖱️ Top nav hover - expanding"),this.clearTimer(this.topNav,"hoverTimer"),this.expandNav("top"))}handleTopNavHoverLeave(){this.topNav.state==="expanded"&&(console.log("🖱️ Top nav hover leave - starting auto-collapse timer"),this.startAutoCollapseTimer("top"))}handleBottomNavClick(){switch(console.log(`🔄 Bottom nav click - current state: ${this.bottomNav.state}`),this.bottomNav.state){case"collapsed":this.expandNav("bottom");break;case"expanded":this.pinNav("bottom");break;case"pinned":this.unpinNav("bottom");break}}handleBottomNavHoverEnter(){this.bottomNav.state==="collapsed"&&(console.log("🖱️ Bottom nav hover - expanding"),this.clearTimer(this.bottomNav,"hoverTimer"),this.expandNav("bottom"))}handleBottomNavHoverLeave(){this.bottomNav.state==="expanded"&&(console.log("🖱️ Bottom nav hover leave - starting auto-collapse timer"),this.startAutoCollapseTimer("bottom"))}expandNav(t){const e=t==="top"?this.topNav:this.bottomNav;console.log(`📤 Expanding ${t} nav`),e.state="expanded",this.showNav(t),this.showExpandedMenu(t),this.updateToggleIcon(t,"expanded"),this.clearTimer(e,"autoHideTimer"),this.clearTimer(e,"hoverTimer")}pinNav(t){const e=t==="top"?this.topNav:this.bottomNav;console.log(`📌 Pinning ${t} nav`),e.state="pinned",this.showNav(t),this.showExpandedMenu(t),this.updateToggleIcon(t,"pinned"),this.clearTimer(e,"autoHideTimer"),this.clearTimer(e,"hoverTimer")}unpinNav(t){const e=t==="top"?this.topNav:this.bottomNav;console.log(`📌❌ Unpinning ${t} nav`),e.state="collapsed",this.collapseNav(t),this.updateToggleIcon(t,"collapsed"),this.scrollState.isScrollingDown&&window.scrollY>this.scrollState.scrollThreshold&&(console.log("📜 Currently scrolling down - hiding nav immediately"),setTimeout(()=>this.hideNav(t),100))}collapseNav(t){const e=t==="top"?this.topNav:this.bottomNav;console.log(`📥 Collapsing ${t} nav`),e.state="collapsed",this.hideExpandedMenu(t),this.updateToggleIcon(t,"collapsed"),this.clearTimer(e,"autoHideTimer"),this.clearTimer(e,"hoverTimer")}showNav(t){const e=t==="top"?this.topNav:this.bottomNav;e.element&&(console.log(`👁️ Showing ${t} nav`),e.element.classList.remove("nav-hidden-top","nav-hidden-bottom"),e.element.classList.add("nav-visible"),e.element.style.opacity="1",e.element.style.visibility="visible",e.element.style.pointerEvents="auto",e.element.style.transform="translateX(0)")}hideNav(t){const e=t==="top"?this.topNav:this.bottomNav;e.element&&(console.log(`🫥 Hiding ${t} nav`),e.element.classList.remove("nav-visible"),e.element.classList.add(t==="top"?"nav-hidden-top":"nav-hidden-bottom"),e.element.style.opacity="0",e.element.style.visibility="hidden",e.element.style.pointerEvents="none",t==="top"?e.element.style.transform="translateX(-200px)":e.element.style.transform="translateX(200px)")}showExpandedMenu(t){const e=t==="top"?this.topNav:this.bottomNav;e.expanded&&(console.log(`📤 Showing ${t} expanded menu`),e.expanded.classList.add("show"),e.expanded.classList.remove("exiting"))}hideExpandedMenu(t){const e=t==="top"?this.topNav:this.bottomNav;e.expanded&&(console.log(`📥 Hiding ${t} expanded menu`),e.expanded.classList.add("exiting"),setTimeout(()=>{e.expanded?.classList.remove("show","exiting")},600))}updateToggleIcon(t,e){const o=t==="top"?this.topNav:this.bottomNav;if(o.toggle)switch(console.log(`🔄 Updating ${t} toggle icon to ${e}`),e){case"collapsed":o.toggle.classList.remove("active");break;case"expanded":break;case"pinned":o.toggle.classList.add("active");break}}startAutoCollapseTimer(t){const e=t==="top"?this.topNav:this.bottomNav;this.clearTimer(e,"hoverTimer"),e.hoverTimer=setTimeout(()=>{e.state==="expanded"&&(console.log(`⏱️ Auto-collapsing ${t} nav after hover timeout`),this.collapseNav(t))},3e3)}clearTimer(t,e){t[e]&&(clearTimeout(t[e]),t[e]=null)}debugState(){console.log("🔍 Nav States:",{top:this.topNav.state,bottom:this.bottomNav.state,scrollingDown:this.scrollState.isScrollingDown,scrollY:window.scrollY})}}const i=new v;window.debugNavSystem=()=>i.debugState();function r(){console.log("🚀 Simple navigation init called"),window.testNavigation=m,window.debugNav=()=>i.debugState(),console.log("✅ Navigation debug functions ready")}function m(){console.log("🧪 Testing navigation states...");const n=document.querySelector("#navTab")||document.querySelector(".nav-tab"),t=document.querySelector(".settings-tab")||document.querySelector("[data-settings-tab]");n&&(console.log("Top nav classes:",n.className),console.log("Top nav computed opacity:",window.getComputedStyle(n).opacity),console.log("Top nav computed transform:",window.getComputedStyle(n).transform)),t&&(console.log("Bottom nav classes:",t.className),console.log("Bottom nav computed opacity:",window.getComputedStyle(t).opacity),console.log("Bottom nav computed transform:",window.getComputedStyle(t).transform)),i.debugState()}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",r):r();
